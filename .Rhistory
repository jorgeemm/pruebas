geom_point(color = "blue", size = 3) +  # Puntos para los AME
geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = "black") +  # Barras de error
geom_vline(xintercept = 0, linetype = "dashed", color = "grey") +  # Línea vertical en 0
labs(
title = "Average Marginal Effects (AME) with Confidence Intervals",
x = "AME",
y = "Variables"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14),  # Centrar título
axis.text.y = element_text(size = 10)  # Ajustar tamaño de texto
)
library(rms)
logit.vif<- vif(m.vox)
logit.vif
library(lmtest)
logit.het<-bptest(m.vox)
logit.het
library(stargazer)
stargazer(m.vox,
type="text",
dep.var.labels=c("Voto VOX"),
covariate.labels=c("Hombre", "Estudios Universitarios", "Edad", "Valoración + economia", "Ideología", "Voto 2019: PP (cr:PSOE)", "Voto 2019: VOX (cr:PSOE)", "Voto 2019: Podemos (cr:PSOE)", "Voto 2019: Ciudadanos (cr:PSOE)", "Voto 2019: +Madrid (cr:PSOE)", "Voto 2019: Otros (cr:PSOE)", "Voto 2019: blanco (cr:PSOE)", "Constante"))
set.seed(123)
index <- 1:nrow(data)
porc_test <- 0.40
# Dividir datos
test.data <- data %>% sample_frac(porc_test)
train.data <- data %>% anti_join(test.data)
clase_real <- test.data$intvox
View(test.data)
set.seed(123)
index <- 1:nrow(datos_log)
source("00_datos/source.r")
# Intención de voto
table(datos$INTENCIONG)
# Intención voto VOX
datos <- datos %>%
mutate(
intvox = case_when(
INTENCIONG == 3 ~ 1,
INTENCIONG >= 9977 ~ NA,
TRUE ~ 0))
table(datos$intvox, useNA = "ifany")
datos_log <- datos %>%
select(intvox, hombre, estudios_universitarios, edad, ecoesp, ideol, recuerdo19) %>%
drop_na()
set.seed(123)
index <- 1:nrow(datos_log)
set.seed(123)
index <- 1:nrow(datos_log)
set.seed(123)
index <- 1:nrow(datos_log)
source("00_datos/source.r")
# Intención de voto
table(datos$INTENCIONG)
# Intención voto VOX
datos <- datos %>%
mutate(
intvox = case_when(
INTENCIONG == 3 ~ 1,
INTENCIONG >= 9977 ~ NA,
TRUE ~ 0))
table(datos$intvox, useNA = "ifany")
datos_log <- datos %>%
select(intvox, hombre, estudios_universitarios, edad, ecoesp, ideol, recuerdo19) %>%
drop_na()
datos_log <- datos %>%
select(intvox, hombre, estudios_universitarios, edad, ecoesp, ideol, recuerdo19) %>%
drop_na()
datos_log <- datos %>%
tidyverse::select(intvox, hombre, estudios_universitarios, edad, ecoesp, ideol, recuerdo19) %>%
drop_na()
datos_log <- datos %>%
dplyr::select(intvox, hombre, estudios_universitarios, edad, ecoesp, ideol, recuerdo19) %>%
drop_na()
summary(datos_log)
library(MASS)
m.vox <- glm(intvox ~ hombre + estudios_universitarios + edad + ecoesp + ideol + recuerdo19, data = datos_log, family = "binomial")
summary(m.vox)
confint(m.vox)
exp(coef(m.vox))
exp(coef(m.vox))
exp(cbind(OR = coef(m.vox), confint(m.vox)))
data1 <- with(datos_log, data.frame(ideol = mean(ideol), recuerdo19 = c("PSOE","PP","VOX","Podemos","Ciudadanos", "Más Madrid", "Otros", "En blanco"), edad = mean(edad), hombre="Hombre", estudios_universitarios="con EU", ecoesp="negativa"))
head(data1, 8)
data1$probpredichas_vox<- predict(m.vox, newdata = data1, type = "response")
data1[, c(2, 7)]  #le pido que muestre todas las filas de las columnas 2 (recuerdo voto) y 7(probabilidad predicha)
library(margins)
margins_vox <- margins(m.vox)
# Resumen
summary_margins <- summary(margins_vox)
summary_margins
# Convertimos el resumen en un data.frame para poder hacer un gráfico
data_to_plot <- data.frame(
factor = summary_margins$factor,
AME = summary_margins$AME,
lower = summary_margins$lower,
upper = summary_margins$upper
)
library(rms)
logit.vif<- vif(m.vox)
logit.vif
library(lmtest)
logit.het<-bptest(m.vox)
logit.het
library(stargazer)
stargazer(m.vox,
type="text",
dep.var.labels=c("Voto VOX"),
covariate.labels=c("Hombre", "Estudios Universitarios", "Edad", "Valoración + economia", "Ideología", "Voto 2019: PP (cr:PSOE)", "Voto 2019: VOX (cr:PSOE)", "Voto 2019: Podemos (cr:PSOE)", "Voto 2019: Ciudadanos (cr:PSOE)", "Voto 2019: +Madrid (cr:PSOE)", "Voto 2019: Otros (cr:PSOE)", "Voto 2019: blanco (cr:PSOE)", "Constante"))
set.seed(123)
index <- 1:nrow(datos_log)
porc_test <- 0.40
# Dividir datos
test.data <- datos_log %>% sample_frac(porc_test)
train.data <- datos_log %>% anti_join(test.data)
clase_real <- test.data$intvox
library(MASS)
logit.vox <- glm(intvox ~ hombre + estudios_universitarios + edad + ecoesp + ideol + recuerdo19, data = train.data, family = "binomial")
summary(logit.vox)
predicted_logit<- predict(logit.vox, newdata=test.data, type="response")
head(predicted_logit)
install.packages("ROCR")
library(ROCR)
# Curva ROC
pred_logit <-  prediction(predicted_logit, clase_real) # crea un objeto "predicción"
perf_logit <- performance(pred_logit, measure = "tpr", x.measure = "fpr")
par(mfrow = c(1,1))
plot(perf_logit, lty=1, col="darkgrey", main = "Logit ROC Curve")
auc.logit<- performance(pred_logit, measure = "auc", x.measure = "fpr")
auc.logit@y.values
library(randomForest)
install.packages("randomForest")
class(train.data$intvox)
library(randomForest)
# Convertimos la variable intvoto en factor (de lo contrario, da error)
train.data$intvox <- as.factor(train.data$intvox)
test.data$intvox <- as.factor(test.data$intvox)
# Entrenamos el modelo Random Forest
rf.vox <- randomForest(
intvox ~ hombre + estudios_universitarios + edad + ecoesp + ideol + recuerdo19,
data = train.data,
ntree = 500,      # número de árboles
mtry = 2,         # número de predictores seleccionados aleatoriamente por árbol
importance = TRUE # importancia de variables
)
# Importancia de las variables
importance(rf.vox)
library(randomForest)
# Convertimos la variable intvoto en factor (de lo contrario, da error)
train.data$intvox <- as.factor(train.data$intvox)
test.data$intvox <- as.factor(test.data$intvox)
# Entrenamos el modelo Random Forest
rf.vox <- randomForest(
intvox ~ hombre + estudios_universitarios + edad + ecoesp + ideol + recuerdo19,
data = train.data,
ntree = 500,      # número de árboles
mtry = 2,         # número de predictores seleccionados aleatoriamente por árbol
importance = TRUE # importancia de variables
)
# Importancia de las variables
importance(rf.vox)
# Calculamos los valores predichos en el conjunto de test
predicted_rf <- predict(rf.vox, newdata = test.data, type = "prob")[, 2]
# Creamos el objeto de predicción para ROC
pred_rf <- prediction(predicted_rf, clase_real) # valores predichos, valores reales
# Calculamos rendimiento (ROC)
perf_rf <- performance(pred_rf, measure = "tpr", x.measure = "fpr")
# Pintamos la curva ROC
par(mfrow = c(1,1))
plot(perf_rf, lty = 1, col = "gold", main = "Random Forest ROC Curve")
# Calculamos el AUC
auc.rf<- performance(pred_rf, measure = "auc", x.measure = "fpr")
auc.rf@y.values
library(e1071)
# Entrenamos el modelo Naive Bayes
nb_model <- naiveBayes(
intvox ~ hombre + estudios_universitarios + edad + ecoesp + ideol + recuerdo19, data = train.data)
# Calculamos los valores predichos en el conjunto de test
predicted_nb <- predict(nb_model, newdata = test.data, type = "raw")[, 2] # raw en esta librería equivale a prob en la de random.forest
# Creamos el objeto de predicción para ROC
pred_nb <- prediction(predicted_nb, clase_real) #comparar datos predichos con reales
# Calculamos el rendimiento (ROC)
perf_nb <- performance(pred_nb, measure = "tpr", x.measure = "fpr")
# Pintamos la curva ROC
par(mfrow = c(1,1)) # Configuración de un solo gráfico
plot(perf_nb, lty = 1, col = "steelblue", main = "Naive Bayes ROC Curve")
# Calculamos el AUC
auc.nb<- performance(pred_nb, measure = "auc", x.measure = "fpr")
auc.nb@y.values
par(mfrow = c(1,1))
plot(perf_logit, lty=1, col="darkgrey", main = "ROC Curves")
plot(perf_rf, lty=1, col="gold", add = TRUE)
plot(perf_nb, lty=1, col="steelblue", add = TRUE)
legend(0.4, 0.6,
c("Logit=0.920", "Random Forest=0.887", "Naive Bayes=0.916"),
lty = c(1,1,1),
bty = "n",
col=c("darkgrey", "gold","steelblue"),
cex = 0.7)
# Modelo sin ideología ni recuerdo de voto
logit2.vox <- glm(intvox ~ hombre + estudios_universitarios + edad + ecoesp, data = train.data, family = "binomial")
# Predicción
predicted_logit2<- predict(logit2.vox, newdata=test.data, type="response")
# ROC
pred_logit2 <-  prediction(predicted_logit2, clase_real)
perf_logit2<- performance(pred_logit2, measure = "tpr", x.measure = "fpr")
# AUC
auc.logit2 <- performance(pred_logit2, measure = "auc", x.measure = "fpr")
auc.logit2@y.values
par(mfrow = c(1,1))
plot(perf_logit, lty=1, col="darkgrey", main = "Logit ROC Curves")
plot(perf_logit2, lty=2, col="grey", add = TRUE)
legend(0.4, 0.6,
c("Logit=0.920", "Logit(sin ideología ni recuerdo de voto)=0.765"),
lty = c(1,2),
bty = "n",
col=c("darkgrey", "grey"),
cex = 0.7)
logit3.vox <- glm(intvox ~ hombre + estudios_universitarios + edad + I(edad^2) + ecoesp + ideol + recuerdo19,
data = train.data, family = "binomial")
summary(logit3.vox)
install.packages("jsonlite")
library(jsonlite)
spoty <- fromJSON(""C:\Users\Lenovo\Downloads\Streaming_History_Audio_2023-2024_3.json"")
spoty <- fromJSON("C:\Users\Lenovo\Downloads\Streaming_History_Audio_2023-2024_3.json)
spoty <- fromJSON("C:/Users/Lenovo/Downloads/Streaming_History_Audio_2023-2024_3.json)
spoty <- fromJSON("C:/Users/Lenovo/Downloads/Streaming_History_Audio_2023-2024_3.json)
spoty <- fromJSON("C:/Users/Lenovo/Downloads/Streaming_History_Audio_2023-2024_3.json)
spoty <- fromJSON("C:/Users/Lenovo/Downloads/Streaming_History_Audio_2023-2024_3.json)
setwd("~/0 - Master/Sistemas electorales/2_trabajo_individual")
library(pacman)
p_load(tidyverse, haven, margins)
cis <- read_sav("3411.sav") %>%
rename(prov=PROV,
edad=EDAD) %>%
mutate(pgrande=case_when(
INTENCIONGR==1 ~ 1,
INTENCIONGR==21 ~ 0,
T ~ NA),
ideol=ifelse(ESCIDEOL>11,NA,ESCIDEOL),
recuerdo=case_when(
RECUVOTOGR==1 ~ "PSOE",
RECUVOTOGR==2 ~ "PP",
RECUVOTOGR %in% c(4,903,1202,1001) ~ "Unidas Podemos",
RECUVOTOGR==5 ~ "Ciudadanos",
RECUVOTOGR==7 ~ "Más País",
RECUVOTOGR %in% c(8996,9977,9998,9999,0) ~ NA,
T ~ "Otros") %>% as.factor() %>% relevel(ref="Unidas Podemos"),
sitlab=case_when(
SITLAB==1~"Trabaja",
SITLAB %in% c(2,3)~"Jubilado",
SITLAB %in% c(4,5) ~"En paro",
SITLAB==6~"Estudiante",
SITLAB==7~"Trabajo doméstico no remunerado",
SITLAB %in% c(8,9)~NA) %>% as.factor(),
hombre=ifelse(SEXO==2,0,SEXO),
tamuni=case_when(
TAMUNI %in% c(1,2) ~ "Menos de 10.000",
TAMUNI == 3 ~ "10.001 a 50.000",
TAMUNI %in% c(4,5) ~ "50.001 a 400.000",
TAMUNI %in% c(6,7) ~ "Más de 400.000",
T ~ as.character(TAMUNI)) %>% as.factor() %>% relevel(ref="Menos de 10.000"),
estudios_cat=ifelse(ESTUDIOS>=7,NA,ESTUDIOS) %>% factor(levels=c(1:6), labels = c("Sin estudios","Primaria","Secundaria 1ª etapa","Secundaria 2ª etapa", "FP", "Superiores")),
estudios=as.numeric(estudios_cat),
estudios=case_when(
estudios==5 ~ 4,
estudios==6 ~ 5,
T ~ estudios),
ingreh=ifelse(INGRESHOG %in% c(8,9),NA,INGRESHOG),
ingreh=6-ingreh) %>%
select(prov,pgrande,edad,hombre,ideol,recuerdo,sitlab,tamuni,estudios,ingreh,estudios_cat) %>%
na.omit()
prov <- readxl::read_xlsx("district_seats_29.11.24.xlsx") %>%
rename(prov=code)
datos <- left_join(cis,prov,by="prov")
#table(datos$prov,datos$pgrande) %>% prop.table(1) %>% round(4)*100
modelo1 <- glm(pgrande ~ dist_mag+up_seats+vox_seats+cs_seats,
datos,
family="binomial")
modelo2 <- glm(pgrande ~ dist_mag+up_seats+vox_seats+cs_seats+edad+hombre+ideol+recuerdo+ingreh+estudios,
datos,
family="binomial")
datos$district <- as.factor(datos$district)
datos$district <- relevel(datos$district, ref = "Madrid")
modelo3 <- glm(pgrande ~ dist_mag+up_seats+vox_seats+cs_seats+edad+hombre+ideol+recuerdo+ingreh+estudios+district,
datos,
family="binomial")
#summary(modelo1)
#summary(modelo2)
#summary(modelo3)
margins <- margins(modelo2)
summary_margins <- summary(margins)
summary_margins
data_to_plot <- data.frame(
factor = summary_margins$factor,
AME = summary_margins$AME,
lower = summary_margins$lower,
upper = summary_margins$upper)%>%
mutate(factor = fct_relevel(factor,
rev(c("dist_mag", "up_seats", "cs_seats", "vox_seats",
"edad", "hombre", "estudios", "ingreh",
"ideol", "recuerdoMás País", "recuerdoPSOE",
"recuerdoOtros", "recuerdoCiudadanos",
"recuerdoPP"))))
ggplot(data_to_plot, aes(x = AME, y = factor))+
geom_vline(xintercept = 0, linetype = "dashed", color = "grey") +
geom_vline(xintercept = c(0.2,0.4,0.6), color = "lightgrey", alpha = 0.5)+
geom_errorbarh(aes(xmin = lower, xmax = upper), height = 0.2, color = "black") +
geom_point(color = "#949494", size = 2)  +
labs(
title = NULL,
x = "Efectos Marginales Medios",
y = "Variables"
) +
theme_classic() +
theme(axis.text.y = element_text(size = 9),
axis.text.x = element_text(size = 9),
axis.title = element_text(size = 15)) +
scale_y_discrete(labels=c("PP (cr: UP)","Cs (cr: UP)","Otros (cr: UP)","PSOE (cr: UP)","Recuerdo de voto a:\n  Más País (cr: UP)","Ideología","Ingresos hogar","Estudios","Hombre","Edad","Escaño-Vox","Escaño-Cs","Escaño UP","Magnitud distrito"))
data1 <- with(datos, data.frame(up_seats=mean(up_seats),vox_seats=mean(vox_seats),cs_seats=mean(cs_seats),edad=mean(edad),ideol=mean(ideol),ingreh=mean(ingreh),estudios=mean(estudios),hombre=0,recuerdo="PSOE", dist_mag=c(1:12,16,32,37)))
data1$probpredichas_vox<- predict(modelo2, newdata = data1, type = "response")
data1[, c(10, 11)]
View(data1)
data1 <- with(datos, data.frame(up_seats=mean(up_seats),vox_seats=mean(vox_seats),cs_seats=mean(cs_seats),edad=mean(edad),ideol=mean(ideol),ingreh=mean(ingreh),estudios=mean(estudios),hombre=1,recuerdo="Podemos", dist_mag=c(1:12,16,32,37)))
data1$probpredichas<- predict(modelo2, newdata = data1, type = "response")
View(datos)
data1 <- with(datos, data.frame(up_seats=mean(up_seats),vox_seats=mean(vox_seats),cs_seats=mean(cs_seats),edad=mean(edad),ideol=mean(ideol),ingreh=mean(ingreh),estudios=mean(estudios),hombre=1,recuerdo="Unidas Podemos", dist_mag=c(1:12,16,32,37)))
data1$probpredichas<- predict(modelo2, newdata = data1, type = "response")
data1[, c(10, 11)]
cis <- read_sav("3411.sav") %>%
rename(prov=PROV,
edad=EDAD) %>%
mutate(pgrande=case_when(
INTENCIONGR==1 ~ 1,
INTENCIONGR==21 ~ 0,
T ~ NA),
ideol=ifelse(ESCIDEOL>11,NA,ESCIDEOL),
recuerdo=case_when(
RECUVOTOGR==1 ~ "PSOE",
RECUVOTOGR==2 ~ "PP",
RECUVOTOGR %in% c(4,903,1202,1001) ~ "Unidas Podemos",
RECUVOTOGR==5 ~ "Ciudadanos",
RECUVOTOGR==7 ~ "Más País",
RECUVOTOGR %in% c(8996,9977,9998,9999,0) ~ NA,
T ~ "Otros") %>% as.factor() %>% relevel(ref="Unidas Podemos"),
sitlab=case_when(
SITLAB==1~"Trabaja",
SITLAB %in% c(2,3)~"Jubilado",
SITLAB %in% c(4,5) ~"En paro",
SITLAB==6~"Estudiante",
SITLAB==7~"Trabajo doméstico no remunerado",
SITLAB %in% c(8,9)~NA) %>% as.factor(),
hombre=ifelse(SEXO==2,0,SEXO),
tamuni=case_when(
TAMUNI %in% c(1,2) ~ "Menos de 10.000",
TAMUNI == 3 ~ "10.001 a 50.000",
TAMUNI %in% c(4,5) ~ "50.001 a 400.000",
TAMUNI %in% c(6,7) ~ "Más de 400.000",
T ~ as.character(TAMUNI)) %>% as.factor() %>% relevel(ref="Menos de 10.000"),
estudios_cat=ifelse(ESTUDIOS>=7,NA,ESTUDIOS) %>% factor(levels=c(1:6), labels = c("Sin estudios","Primaria","Secundaria 1ª etapa","Secundaria 2ª etapa", "FP", "Superiores")),
estudios=as.numeric(estudios_cat),
estudios=case_when(
estudios==5 ~ 4,
estudios==6 ~ 5,
T ~ estudios),
ingreh=ifelse(INGRESHOG %in% c(8,9),NA,INGRESHOG),
ingreh=6-ingreh) %>%
select(prov,pgrande,edad,hombre,ideol,recuerdo,sitlab,tamuni,estudios,ingreh,estudios_cat) %>%
na.omit()
cis <- read_sav("3411.sav") %>%
rename(prov=PROV,
edad=EDAD) %>%
mutate(pgrande=case_when(
INTENCIONGR==1 ~ 1,
INTENCIONGR==21 ~ 0,
T ~ NA),
ideol=ifelse(ESCIDEOL>11,NA,ESCIDEOL),
recuerdo=case_when(
RECUVOTOGR==1 ~ "PSOE",
RECUVOTOGR==2 ~ "PP",
RECUVOTOGR %in% c(4,903,1202,1001) ~ "Unidas Podemos",
RECUVOTOGR==5 ~ "Ciudadanos",
RECUVOTOGR==7 ~ "Más País",
RECUVOTOGR %in% c(8996,9977,9998,9999,0) ~ NA,
T ~ "Otros") %>% as.factor() %>% relevel(ref="Unidas Podemos"),
sitlab=case_when(
SITLAB==1~"Trabaja",
SITLAB %in% c(2,3)~"Jubilado",
SITLAB %in% c(4,5) ~"En paro",
SITLAB==6~"Estudiante",
SITLAB==7~"Trabajo doméstico no remunerado",
SITLAB %in% c(8,9)~NA) %>% as.factor(),
hombre=ifelse(SEXO==2,0,SEXO),
tamuni=case_when(
TAMUNI %in% c(1,2) ~ "Menos de 10.000",
TAMUNI == 3 ~ "10.001 a 50.000",
TAMUNI %in% c(4,5) ~ "50.001 a 400.000",
TAMUNI %in% c(6,7) ~ "Más de 400.000",
T ~ as.character(TAMUNI)) %>% as.factor() %>% relevel(ref="Menos de 10.000"),
estudios_cat=ifelse(ESTUDIOS>=7,NA,ESTUDIOS) %>% factor(levels=c(1:6), labels = c("Sin estudios","Primaria","Secundaria 1ª etapa","Secundaria 2ª etapa", "FP", "Superiores")),
estudios=as.numeric(estudios_cat),
estudios=case_when(
estudios==5 ~ 4,
estudios==6 ~ 5,
T ~ estudios),
ingreh=ifelse(INGRESHOG %in% c(8,9),NA,INGRESHOG),
ingreh=6-ingreh) #%>%
table(cis$CERCANIA)
attr(cis$CERCANIA)
attr(cis$CERCANIA, "labels")
cis2 <- read_sav("3411.sav") %>%
rename(prov=PROV,
edad=EDAD) %>%
mutate(pgrande=case_when(
INTENCIONGR==1 ~ 1,
INTENCIONGR==21 ~ 0,
T ~ NA),
ideol=ifelse(ESCIDEOL>11,NA,ESCIDEOL),
recuerdo=case_when(
RECUVOTOGR==1 ~ "PSOE",
RECUVOTOGR==2 ~ "PP",
RECUVOTOGR %in% c(4,903,1202,1001) ~ "Unidas Podemos",
RECUVOTOGR==5 ~ "Ciudadanos",
RECUVOTOGR==7 ~ "Más País",
RECUVOTOGR %in% c(8996,9977,9998,9999,0) ~ NA,
T ~ "Otros") %>% as.factor() %>% relevel(ref="Unidas Podemos"),
sitlab=case_when(
SITLAB==1~"Trabaja",
SITLAB %in% c(2,3)~"Jubilado",
SITLAB %in% c(4,5) ~"En paro",
SITLAB==6~"Estudiante",
SITLAB==7~"Trabajo doméstico no remunerado",
SITLAB %in% c(8,9)~NA) %>% as.factor(),
hombre=ifelse(SEXO==2,0,SEXO),
tamuni=case_when(
TAMUNI %in% c(1,2) ~ "Menos de 10.000",
TAMUNI == 3 ~ "10.001 a 50.000",
TAMUNI %in% c(4,5) ~ "50.001 a 400.000",
TAMUNI %in% c(6,7) ~ "Más de 400.000",
T ~ as.character(TAMUNI)) %>% as.factor() %>% relevel(ref="Menos de 10.000"),
estudios_cat=ifelse(ESTUDIOS>=7,NA,ESTUDIOS) %>% factor(levels=c(1:6), labels = c("Sin estudios","Primaria","Secundaria 1ª etapa","Secundaria 2ª etapa", "FP", "Superiores")),
estudios=as.numeric(estudios_cat),
estudios=case_when(
estudios==5 ~ 4,
estudios==6 ~ 5,
T ~ estudios),
ingreh=ifelse(INGRESHOG %in% c(8,9),NA,INGRESHOG),
ingreh=6-ingreh,
cercania=case_when(
CERCANIA==1 ~ "PSOE",
CERCANIA %in% c(4,7,8,9,10,11,21,101,203,401,403,903,1001,1004,1202,1301) ~ "SUMAR",
T ~ NA) %>% as.factor())
table(cis2$pgrande,cis2$cercania)
table(cis2$pgrande,cis2$cercania) %>% prop.table() %>% round(4)*100
table(cis2$pgrande,cis2$cercania) %>% prop.table(1) %>% round(4)*100
table(cis2$pgrande,cis2$cercania) %>% prop.table(2) %>% round(4)*100
table(cis2$pgrande,cis2$cercania) #%>% prop.table(2) %>% round(4)*100
table(cis2$pgrande,cis2$cercania) %>% prop.table(2) %>% round(4)*100
cis2 <- read_sav("3411.sav") %>%
rename(prov=PROV,
edad=EDAD) %>%
mutate(pgrande=case_when(
INTENCIONGR==1 ~ 1,
INTENCIONGR==21 ~ 0,
T ~ NA),
ideol=ifelse(ESCIDEOL>11,NA,ESCIDEOL),
recuerdo=case_when(
RECUVOTOGR==1 ~ "PSOE",
RECUVOTOGR==2 ~ "PP",
RECUVOTOGR %in% c(4,903,1202,1001) ~ "Unidas Podemos",
RECUVOTOGR==5 ~ "Ciudadanos",
RECUVOTOGR==7 ~ "Más País",
RECUVOTOGR %in% c(8996,9977,9998,9999,0) ~ NA,
T ~ "Otros") %>% as.factor() %>% relevel(ref="Unidas Podemos"),
sitlab=case_when(
SITLAB==1~"Trabaja",
SITLAB %in% c(2,3)~"Jubilado",
SITLAB %in% c(4,5) ~"En paro",
SITLAB==6~"Estudiante",
SITLAB==7~"Trabajo doméstico no remunerado",
SITLAB %in% c(8,9)~NA) %>% as.factor(),
hombre=ifelse(SEXO==2,0,SEXO),
tamuni=case_when(
TAMUNI %in% c(1,2) ~ "Menos de 10.000",
TAMUNI == 3 ~ "10.001 a 50.000",
TAMUNI %in% c(4,5) ~ "50.001 a 400.000",
TAMUNI %in% c(6,7) ~ "Más de 400.000",
T ~ as.character(TAMUNI)) %>% as.factor() %>% relevel(ref="Menos de 10.000"),
estudios_cat=ifelse(ESTUDIOS>=7,NA,ESTUDIOS) %>% factor(levels=c(1:6), labels = c("Sin estudios","Primaria","Secundaria 1ª etapa","Secundaria 2ª etapa", "FP", "Superiores")),
estudios=as.numeric(estudios_cat),
estudios=case_when(
estudios==5 ~ 4,
estudios==6 ~ 5,
T ~ estudios),
ingreh=ifelse(INGRESHOG %in% c(8,9),NA,INGRESHOG),
ingreh=6-ingreh,
cercania=case_when(
CERCANIA==1 ~ "PSOE",
CERCANIA %in% c(4,7,8,9,10,11,21,101,203,401,403,903,1001,1004,1202,1301) ~ "SUMAR",
T ~ NA) %>% as.factor(),
estrategico=case_when(
pgrande==0 & cercania=="SUMAR" ~ 0,
pgrande==1 & cercania=="PSOE" ~ 0,
pgrande==1 & cercania=="SUMAR" ~ 1,
pgrande==0 & cercania=="PSOE" ~ 1,
T ~ NA
))
table(cis2$estrategico)
table(cis2$prov,cis2$estrategico) %>% prop.table(1) %>% round(4)*100
