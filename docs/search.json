[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Apuntes de R",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Introducción a R",
      "Apuntes de R"
    ]
  },
  {
    "objectID": "02_intro/14_operaciones_basicas.html",
    "href": "02_intro/14_operaciones_basicas.html",
    "title": "Operaciones básicas",
    "section": "",
    "text": "Suma, resta, multiplicación, división, exponencial…\nCuadrado (sqrt) y logaritmos (log)\nAbsoluto:\n\n\nabs(-1.4)\n\n[1] 1.4\n\n\n\nRedondear:\n\n\nround(1.234, 2) #El segundo número indica el número de decimales al que se redondeará.\n\n[1] 1.23",
    "crumbs": [
      "Introducción a R",
      "Operaciones básicas"
    ]
  },
  {
    "objectID": "02_intro/14_operaciones_basicas.html#operaciones-numéricas",
    "href": "02_intro/14_operaciones_basicas.html#operaciones-numéricas",
    "title": "Operaciones básicas",
    "section": "",
    "text": "Suma, resta, multiplicación, división, exponencial…\nCuadrado (sqrt) y logaritmos (log)\nAbsoluto:\n\n\nabs(-1.4)\n\n[1] 1.4\n\n\n\nRedondear:\n\n\nround(1.234, 2) #El segundo número indica el número de decimales al que se redondeará.\n\n[1] 1.23",
    "crumbs": [
      "Introducción a R",
      "Operaciones básicas"
    ]
  },
  {
    "objectID": "02_intro/14_operaciones_basicas.html#edición-de-caracteres-texto",
    "href": "02_intro/14_operaciones_basicas.html#edición-de-caracteres-texto",
    "title": "Operaciones básicas",
    "section": "2. Edición de caracteres (texto)",
    "text": "2. Edición de caracteres (texto)\n\nUnión de caracteres:\n\n\npaste(\"Hola\", \"mundo\", sep = \" \")\n\n[1] \"Hola mundo\"\n\npaste0(\"Hola\", \"mundo\")\n\n[1] \"Holamundo\"\n\n\n\nSeleccionar una parte del texto:\n\n\nsubstring(\"Nombre: Marga\", first = 7, last = 11)\n\n[1] \": Mar\"\n\n\n\nPasar un texto a minúsculas:\n\n\ntolower(\"Hola, soy Marga\")\n\n[1] \"hola, soy marga\"\n\n\n\nPasar un texto mayúsculas:\n\n\ntoupper(\"Hola, soy Marga\")\n\n[1] \"HOLA, SOY MARGA\"\n\n\n\nContar el número de caracteres (también espacios y símbolos, no solo letras):\n\n\nnchar(\"Hola, mundo!\")\n\n[1] 12",
    "crumbs": [
      "Introducción a R",
      "Operaciones básicas"
    ]
  },
  {
    "objectID": "02_intro/14_operaciones_basicas.html#operadores-lógicos-y-relacionales",
    "href": "02_intro/14_operaciones_basicas.html#operadores-lógicos-y-relacionales",
    "title": "Operaciones básicas",
    "section": "3. Operadores lógicos y relacionales",
    "text": "3. Operadores lógicos y relacionales\nOperadores lógicos:\n\n! NOT (lo opuesto)\n& AND\n| OR\n\nOperadores relacionales:\n\n== igual\n!= distinto\n&gt; mayor que\n&gt;= mayor o igual que\n&lt;=menor o igual que\n&lt; menor que",
    "crumbs": [
      "Introducción a R",
      "Operaciones básicas"
    ]
  },
  {
    "objectID": "02_intro/14_operaciones_basicas.html#operaciones-con-vectores",
    "href": "02_intro/14_operaciones_basicas.html#operaciones-con-vectores",
    "title": "Operaciones básicas",
    "section": "4. Operaciones con vectores",
    "text": "4. Operaciones con vectores\nUn vector es una secuencia de elementos del mismo tipo (numérico, carácter, lógico, etc.). Se puede asimilar a una variable.\n\nVer de qué tipo es el vector: class()\nComprobar la longitud del vector: length()\nSi los vectores son númericos, se les pueden aplicar las mismas operaciones que a los números (suma, multuplicaicón…), ya sea a un único vector o entre vectores (sumar un vector a otro). Ej.:\n\n\nvector1 &lt;- c(1, 6, 4)\nvector2 &lt;- c(1, 2, 3)\n\nvector1 + 10\n\n[1] 11 16 14\n\nvector1 + vector2\n\n[1] 2 8 7\n\n\n\nComparar dos vectores:\n\n\nvector1 == vector2\n\n[1]  TRUE FALSE FALSE\n\n\n\nConcatenar vectores: mismos comandos que para unir dos caracteres de texto. Ej.:\n\n\npaste(vector1, \":00\", sep=\"\")\n\n[1] \"1:00\" \"6:00\" \"4:00\"\n\npaste(vector1, vector2, sep = \" & \")\n\n[1] \"1 & 1\" \"6 & 2\" \"4 & 3\"\n\n\n\nBuscar si existe un valor concreto dentro de un vector. Ej.:\n\n\npartidos1 &lt;- c(\"PP\", \"PSOE\", \"SUMAR\", \"VOX\")\npartidos2 &lt;- c(\"PP\", \"PSOE\", \"OTROS\")\n\"VOX\" %in% partidos1\n\n[1] TRUE\n\n\"VOX\" %in% partidos2\n\n[1] FALSE\n\n\n\nCombinar vectores:\n\n\nlong_vector &lt;- c(partidos1, partidos2)\nlong_vector\n\n[1] \"PP\"    \"PSOE\"  \"SUMAR\" \"VOX\"   \"PP\"    \"PSOE\"  \"OTROS\"\n\n\n\nConocer un elemento dentro de una posición concreta de un vector:\n\n\nnum_vector &lt;- 5:10\nnum_vector[3] # Elemento en la posición 3\n\n[1] 7\n\nnum_vector[c(2, 4)] # Elementos en las posiciones 2 y 4\n\n[1] 6 8\n\n\n\nCambiar elementos específicos de un vector:\n\n\nnum_vector[c(2, 4)] &lt;- c(13, 50)\nnum_vector\n\n[1]  5 13  7 50  9 10\n\n\n\nExplorar los primeros y últimos valores de un vector:\n\n\nhead(long_vector, 2) # devuelve los dos primeros\n\n[1] \"PP\"   \"PSOE\"\n\ntail(long_vector, 3) # devuelve los tres primeros\n\n[1] \"PP\"    \"PSOE\"  \"OTROS\"",
    "crumbs": [
      "Introducción a R",
      "Operaciones básicas"
    ]
  },
  {
    "objectID": "02_intro/12_documentos_r.html",
    "href": "02_intro/12_documentos_r.html",
    "title": "Documentos de R",
    "section": "",
    "text": "Para escribir código en R se pueden usar tres tipos de documentos: Script, RMarkdown y Quarto.",
    "crumbs": [
      "Introducción a R",
      "Documentos de R"
    ]
  },
  {
    "objectID": "02_intro/12_documentos_r.html#script",
    "href": "02_intro/12_documentos_r.html#script",
    "title": "Documentos de R",
    "section": "Script",
    "text": "Script\nSirve solo para escribir código. No tiene otras opciones como poner imágenes, texto, títulos o guardar en otros formatos como pdf o html.",
    "crumbs": [
      "Introducción a R",
      "Documentos de R"
    ]
  },
  {
    "objectID": "02_intro/12_documentos_r.html#rmarkdown",
    "href": "02_intro/12_documentos_r.html#rmarkdown",
    "title": "Documentos de R",
    "section": "RMarkdown",
    "text": "RMarkdown\n\n1. Elementos básicos\nYalm\nSe escribe al comienzo del documento, y establece las características básicas de este y como se va a guardar.\n---\n title: \"El título del documento\"\n subtitle: \"El subtítulo\"\n date: \"Fecha\"\n author: \"Autor\"\n output:\n  html_document: #también se puede guardar como pdf o word, así saca una página web\n    theme: united #es el tema del documento, hay diferentes\n    toc: true #para crear una tabla de contenido\n ---\nMuchos de estos elementos son opcionales, y se pueden añadir más.\nEjemplos de temas que se pueden utilizar para el documento: https://rpubs.com/ranydc/rmarkdown_themes\nChunks\nPara escribir los códigos de R y que estos se puedan ejecutar, se debe añadir un chunk. Se puede hacer manualmente o mediante el atajo Ctrl + Alt + I.\nPara ejecutar el códico que se escriba, se puede pulsar el triángulo verde de la esquina superior derecha (del chunk), la opción Run de la esquina de la pestaña del rmd, o usando Ctrl+Enter.\nDentro de los chunks, se pueden establecer diferentes opciones para que no se muestre el código en el documento final pero se ejecute igualmente, no se muestren los errores… Estos ajustes se puedes escribir como comandos dentro de {r} o en la rueda de opciones que aparece a la derecha de cada chunk. Algunas de estas opciones son:\n\ninclude: incluir los contenidos del chunk en el output\nmessage: mensajes de la consola\nwarning: avisos de la consola\necho: muestra el código\neval: muestra el resultado del código (tabla, gráfico, etc.)\n…\n\nSi se quiere que alguna de estas opciones se aplique a todos los chunks del documento, en lugar de tener que especificarlas en cada nuevo bloque de código se pueden escribir una única vez al princicipio del documento del siguiente modo:\nknitr::opts_chunk$set(warning = FALSE, # En caso de mensajes de alerta\n                      message = FALSE, # Otro tipo de mensajes\n                      echo = TRUE, # Mostrar el código\n                      results = TRUE) # Mostrar los resultados del código\nAsimismo, los diferentes chunks del documento se les pueden dar nombres del siguiente modo: {r nombre chunk}\nLos chunks de R además permiten ejecutar todo el contenido de los chunks empleados con anterioridad, lo que puede resultar muy útil en el casdo de cometer errores que nedesitar resetear todo el trabajo realizado hasta el momento. Para ello, se debe seleccrionar la segunda opción que aparece en la esquina superior derecha del chunk (entre la rueda y el triángulo verde).\nEncabezados\nSirven para delimitar los diferentes apartados y subapartados de los documentos. Se crean con las # (en una nueva línea se escribiría: # Encabezado de nivel 1. El espacio entre la almohadilla y el texto es imprescindible. Si en lugar de escribir una única # se ponen 2, 3… o 6, se van creando subniveles de encabezados (un mayor número de almohadillas indica un nivel inferior de encabezado).\nEspacio entre líneas\nSi se quiere añadir un salto de línea, se debe dejar una línea de código vacía entre los dos textos que se pretenden separar. Si simplemente se escribe en la siguiente línea, se compliará todo como parte del mismo párrafo.\nCompilar el documento\nSe selecciona la opción Knit, lo que genrará un documento HTML/PDF con todo el contenido y los resultados.\n\n\n\n2. Opciones de texto y otros elementos\nSi no se conocen estas opciones, es mejor usar el apartado de edición de texto Visual y no Source, ya que en el primero se puede editar el texto de forma parecida a un Word.\nFormatos de texto:\n\n**Texto en negrita** = Texto en negrita (los asteriscos se pueden sustituir por _)\n*Texto en cursiva* = Texto en cursiva\n***Texto en negrita y cursiva*** = Texto en negrita y cursiva\n`Código subrayado` = Código subrayado\nSubíndice: 3~2~ = 32\nSuperíndice: 3^2^ = 32\n\nListas:\nPara las listas de puntos, se escriben al comienzo de la línea de código y seguido de un espacio antes del texto un asterisco (*) o un guión (-). Además, si en la siguiente línea se añade espacio también antes del símbolo, se creará una sublista:\n\nElemento 1\n\nElemento 2\n\n\nTambién se pueden hacer listas con números y letras: 1. 1) A. i. etc.\nCitas\nSe escribe el texto con un &gt; al principio de la línea:\n\nEjemplo de una cita\n\nEcuaciones\nSe escribe el texto de la ecuación entre dos símbolos del dolar. Ej.: $E=mc^{2}$ = \\(E=mc^{2}\\)\nSi se quiere que la ecuación esté en un bloque a parte en lugar de dentro del texto, se añaden dos símbolos del dolar para abrir y cerrar la ecuación: \\[E=mc^{2}\\]\nHipervínculos\nEl texto para el que se quiere el hipervínculo se escribe entre corchetes, y a continuación (sin dejar espacios) se escribe entre paréntesis el enlace a la página para la que se quiere el hipervínculo. Ej.: [Texto del hipervínculo](paginaweb.com)\nAñadir imágenes\nHay varias opciones para insertar una imagen en el texto. Por ejemplo, puedes guardarla previamente en el directorio de trabajo (o en el proyecto que hayas creado). Una vez la tienes en tu directorio, puedes usar esta línea de código para introducirla en el documento final: ![título de la imagen](path-to-image-here). Además, se puede combinar con center para centrar la imagen en el output, y con width para ajustar el tamaño.\n&lt;center&gt;\n![Título de la imagen](mi_imagen.png){width=350px}\n&lt;/center&gt;\nOtra manera sencilla de controlar el tamaño es usando porcentajes: {width=10%}\nUna alternativa bastante usada, por ejemplo, es usar include_graphics para controlar el ancho y alto de la imagen añadiendo como opción dentro de {r} lo siguiente: out.width = \"100px\", out.height=\"300px\"\nknitr::include_graphics(\"mi_imagen.png\")\nTambién tenemos la opción de introducir una imagen directamente desde la web (es decir, sin descargarla previamente). Primero, creamos una variable con la dirección url. Una vez creada la variable, se añade igual que una imágen guardada en el directorio:\nnombre_imagen&lt;-\"https://ejemplo_imagen.jpg\" \nLíneas horizontales\nSe añaden escribiendo en una línea vacía *** o —. El resultado es:\n\nExisten muchas otras opciones dentro del RMarkdown, como incluir tablas, citas, referencias… En el enlace se puede encontrar información extra, aunque es solo un ejemplo de página sobre RMarkdown.\n\n\n\n3. Índices y tablas de contenido\n\n2.1. Índice como lista al comienzo del documento\nLos índices se crean a partir de los títulos (#). Se puede especificar el número de niveles que se quieren incluir gracias a la opciontoc_depth:\n ---\ntitle: \"El título del documento\"\noutput:\n  html_document:\n    toc: true\n    toc_depth: 3 #En este caso se incluirían los tres primeros niveles del títulos (hasta ###)\n--- \n\n\n\n2.2. Índice a la izquierda del documento\nTabla de contenido despegable\nPara poder hacer una tabla de contenido despegable, se debe crear un css personalizado:\nÍndice personalizable en RMarkdown\nPara crear un índice (TOC - Table of Contents) personalizable en RMarkdown que sea flotante y se pueda ocultar/mostrar, necesitamos añadir código CSS y JavaScript. Aquí te explico paso a paso cómo hacerlo.\n1. Código CSS necesario\nPrimero, necesitas añadir este bloque de código CSS al inicio de tu documento. Este código dará estilo al índice y creará la funcionalidad de mostrar/ocultar:\n```{css, echo=FALSE}\nhr {\n  border: none;\n  border-top: 3px solid #bbb;\n  margin: 1em 0;\n}\n #TOC {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 300px;\n  height: 100%;\n  overflow-y: auto;\n  background: #f8f8f8;\n  border-right: 1px solid #e7e7e7;\n  padding: 20px;\n  transition: left 0.3s ease;\n}\n #TOC.hidden {\n  left: -300px;\n}\n #toggle-toc {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  z-index: 1000;\n  background: #f8f8f8;\n  border: 1px solid #e7e7e7;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n.main-content {\n  transition: margin-left 0.3s ease;\n  margin-left: 200px;\n}\n.main-content.toc-hidden {\n  margin-left: 150px;\n}\n@media (max-width: 767px) {\n  .main-content {\n    margin-left: 0;\n  }\n}\n```\n2. Código JavaScript necesario\nLuego, necesitas añadir este bloque de código JavaScript que proporcionará la funcionalidad interactiva:\n```{js, echo=FALSE}\n$(document).ready(function() {\n  var toc = $('#TOC');\n  var toggle = $('☰');\n  var mainContent = $('body &gt; .main-container');\n  $('body').prepend(toggle);\n  mainContent.addClass('main-content');\n  toggle.click(function() {\n    toc.toggleClass('hidden');\n    mainContent.toggleClass('toc-hidden');\n  });\n  // Inicializar el estado en pantallas pequeñas\n  if ($(window).width() &lt;= 767) {\n    toc.addClass('hidden');\n    mainContent.addClass('toc-hidden');\n  }\n});\n```\n3. Configuración del YAML\nAdemás, asegúrate de que tu encabezado YAML incluya la opción de tabla de contenidos:\n---\ntitle: \"Tu título\"\noutput: \n  html_document:\n    toc: true\n    toc_float: true\n ---\n4. Cómo funciona\nEste código creará:\n\nUn índice flotante en el lado izquierdo de la página\nUn botón (☰) en la esquina superior izquierda para mostrar/ocultar el índice\nEl índice se ocultará automáticamente en dispositivos móviles\nTransiciones suaves al mostrar/ocultar el índice\n\nNota: El código CSS y JavaScript debe colocarse al principio del documento, después del encabezado YAML.\nPersonalización\nPuedes personalizar el aspecto modificando los valores en el código CSS:\n\nCambia width: 300px en #TOC para ajustar el ancho del índice\nModifica background: #f8f8f8 para cambiar el color de fondo\nAjusta margin-left en .main-content para cambiar el espaciado del contenido principal\n\n\n\n\n2.3. Índice por pestañas\n\nEn el yalm no se escribe el toc: true\nTras el primer título (que se puede dejar en blanco escribiendo únicamente la #) se escribe el siguiente comando {.tabset .tabset-fade .tabset-pills}.\nEsta opción se puede repetir para los sucesivos subniveles de títulos, creando nuevas pestañas dentro de cada pestaña (como en este archivo).\n\n\n\n\n2.4. Números de sección\nEn lugar de añadir a mano los números delante de cada título (1.2. Subtitulo), estos se pueden añadir automáticamente gracias a la siguiente opción:\n---\ntitle: \"El título del documento\"\noutput:\n  html_document:\n    toc: true\n    number_sections: true\n---\nSi se utiliza esta opción, hay que comenzar los títulos por el primer nivel, porque si no en el segundo apareceran como 0.1 0.2 …\n\n\n\n\n4. Otras cosas RMarkdown\n\nPara escribir código de R sin que se ejecute (pero mostrándolo en el html), se borran las llaves que rodean la r del chunk:\n\nCódigo que se ejecuta:\n\n\n```{r}\nAquí iría el código\n```\n\nCódigo que no se ejecuta:\n\n```r\nAquí iría el código\n```\n\nCrear índices a mano (lista con hipervínculos)\n\nJunto a un título (para cualquier nivel de #), se escribe: {#nombre-sección}\nDonde se quiera crear el índice se pone el siguiente texto: [Nombre de la sección] (#nombre-sección) Importante: no se debe dejar ningún espacio entre el corchete y el paréntesis.",
    "crumbs": [
      "Introducción a R",
      "Documentos de R"
    ]
  },
  {
    "objectID": "02_intro/12_documentos_r.html#quarto",
    "href": "02_intro/12_documentos_r.html#quarto",
    "title": "Documentos de R",
    "section": "Quarto",
    "text": "Quarto\nLas mismas opciones que en RMarkdown (menos lo del tabstat, que se hace de un modo distinto).",
    "crumbs": [
      "Introducción a R",
      "Documentos de R"
    ]
  },
  {
    "objectID": "02_graficos/8g_otros.html",
    "href": "02_graficos/8g_otros.html",
    "title": "Otros gráficos",
    "section": "",
    "text": "GráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(ideol_psoe_j, aes(x = ideol)) +\n  facet_wrap(~ mes, ncol = 1, strip.position = \"top\", labeller = label_value) +\n  geom_bar(aes(y = porcentaje), stat = \"identity\", fill = \"red\", alpha = 0.1) +\n  geom_point(data = pref_j, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color = Var1), size = 3, alpha = 0.7) +\n  geom_text_repel(data = pref_j, \n                  aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), \n                      label = round(Freq, 0)), \n                  size = 2.7, show.legend = FALSE) +\n  theme_classic() +\n  labs(\n    x = \"Posición ideológica (1-10)\",\n    caption = \"Evolución de preferencias por cada candidato para los votantes del PSOE según su ideología\\n Los valores 7 a 10 de las escala se han omitido debido a la baja frecuencia de votantes socialistas\",\n    color = \"Preferencia por:\") +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9),\n    axis.title = element_text(size = 14),\n    strip.background = element_blank()) +\n  scale_y_continuous(\n    name = \"Porcentaje de votantes\", # Eje izquierdo\n    sec.axis = sec_axis(~ . * max(pref_j$Freq) / max(ideol_psoe$porcentaje), name = \"Preferencia de candidatos\")) +\n  scale_color_manual(\n    values = c(\"Sánchez\" = \"red\", \"Casado/Feijoo\" = \"blue\", \"Indiferente\" = \"grey\")) +\n  scale_x_continuous(breaks = seq(1, 6, by = 1))\n\n\nggplot(ideol_psoe_j, aes(x = ideol)) +\n\n## Juntar los tres graficos\n  facet_wrap(~ mes, ncol = 1, strip.position = \"top\", labeller = label_value) +\n  \n## Barras (eje primario)\n  geom_bar(aes(y = porcentaje), stat = \"identity\", fill = \"red\", alpha = 0.1) +\n  \n## Puntos (eje secundario)\n  geom_point(data = pref_j, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color = Var1), size = 3, alpha = 0.7) +\n  \n## Etiquetas en los puntos que evitan la superposición\n  geom_text_repel(data = pref_j, \n                  aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), \n                      label = round(Freq, 0)), \n                  size = 2.7, show.legend = FALSE) +\n  \n## Tema y etiquetas\n  theme_classic() +\n  labs(\n    x = \"Posición ideológica (1-10)\",\n    caption = \"Evolución de preferencias por cada candidato para los votantes del PSOE según su ideología\\n Los valores 7 a 10 de las escala se han omitido debido a la baja frecuencia de votantes socialistas\",\n    color = \"Preferencia por:\") +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9),\n    axis.title = element_text(size = 14),\n    strip.background = element_blank()) +\n  \n## Ejes con escalas independientes\n  scale_y_continuous(\n    name = \"Porcentaje de votantes\", # Eje izquierdo\n    sec.axis = sec_axis(~ . * max(pref_j$Freq) / max(ideol_psoe$porcentaje), name = \"Preferencia de candidatos\")) + # Eje derecho\n\n## Colores personalizado\n  scale_color_manual(\n    values = c(\"Sánchez\" = \"red\", \"Casado/Feijoo\" = \"blue\", \"Indiferente\" = \"grey\")) +\n\n## Establecer valores del eje x\n  scale_x_continuous(breaks = seq(1, 6, by = 1))\n\n\n\n\n\n\n\n\n\n\n\nideol_psoe_j\n\n\n\n\n\n\n\npref_j",
    "crumbs": [
      "Gráficos",
      "Otros gráficos"
    ]
  },
  {
    "objectID": "02_graficos/8g_otros.html#puntos-barras",
    "href": "02_graficos/8g_otros.html#puntos-barras",
    "title": "Otros gráficos",
    "section": "",
    "text": "GráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(ideol_psoe_j, aes(x = ideol)) +\n  facet_wrap(~ mes, ncol = 1, strip.position = \"top\", labeller = label_value) +\n  geom_bar(aes(y = porcentaje), stat = \"identity\", fill = \"red\", alpha = 0.1) +\n  geom_point(data = pref_j, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color = Var1), size = 3, alpha = 0.7) +\n  geom_text_repel(data = pref_j, \n                  aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), \n                      label = round(Freq, 0)), \n                  size = 2.7, show.legend = FALSE) +\n  theme_classic() +\n  labs(\n    x = \"Posición ideológica (1-10)\",\n    caption = \"Evolución de preferencias por cada candidato para los votantes del PSOE según su ideología\\n Los valores 7 a 10 de las escala se han omitido debido a la baja frecuencia de votantes socialistas\",\n    color = \"Preferencia por:\") +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9),\n    axis.title = element_text(size = 14),\n    strip.background = element_blank()) +\n  scale_y_continuous(\n    name = \"Porcentaje de votantes\", # Eje izquierdo\n    sec.axis = sec_axis(~ . * max(pref_j$Freq) / max(ideol_psoe$porcentaje), name = \"Preferencia de candidatos\")) +\n  scale_color_manual(\n    values = c(\"Sánchez\" = \"red\", \"Casado/Feijoo\" = \"blue\", \"Indiferente\" = \"grey\")) +\n  scale_x_continuous(breaks = seq(1, 6, by = 1))\n\n\nggplot(ideol_psoe_j, aes(x = ideol)) +\n\n## Juntar los tres graficos\n  facet_wrap(~ mes, ncol = 1, strip.position = \"top\", labeller = label_value) +\n  \n## Barras (eje primario)\n  geom_bar(aes(y = porcentaje), stat = \"identity\", fill = \"red\", alpha = 0.1) +\n  \n## Puntos (eje secundario)\n  geom_point(data = pref_j, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color = Var1), size = 3, alpha = 0.7) +\n  \n## Etiquetas en los puntos que evitan la superposición\n  geom_text_repel(data = pref_j, \n                  aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), \n                      label = round(Freq, 0)), \n                  size = 2.7, show.legend = FALSE) +\n  \n## Tema y etiquetas\n  theme_classic() +\n  labs(\n    x = \"Posición ideológica (1-10)\",\n    caption = \"Evolución de preferencias por cada candidato para los votantes del PSOE según su ideología\\n Los valores 7 a 10 de las escala se han omitido debido a la baja frecuencia de votantes socialistas\",\n    color = \"Preferencia por:\") +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9),\n    axis.title = element_text(size = 14),\n    strip.background = element_blank()) +\n  \n## Ejes con escalas independientes\n  scale_y_continuous(\n    name = \"Porcentaje de votantes\", # Eje izquierdo\n    sec.axis = sec_axis(~ . * max(pref_j$Freq) / max(ideol_psoe$porcentaje), name = \"Preferencia de candidatos\")) + # Eje derecho\n\n## Colores personalizado\n  scale_color_manual(\n    values = c(\"Sánchez\" = \"red\", \"Casado/Feijoo\" = \"blue\", \"Indiferente\" = \"grey\")) +\n\n## Establecer valores del eje x\n  scale_x_continuous(breaks = seq(1, 6, by = 1))\n\n\n\n\n\n\n\n\n\n\n\nideol_psoe_j\n\n\n\n\n\n\n\npref_j",
    "crumbs": [
      "Gráficos",
      "Otros gráficos"
    ]
  },
  {
    "objectID": "02_graficos/8g_otros.html#líneas-barras",
    "href": "02_graficos/8g_otros.html#líneas-barras",
    "title": "Otros gráficos",
    "section": "Líneas + barras",
    "text": "Líneas + barras\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(ideol_psoe, aes(x = ideol)) +\n  geom_bar(aes(y = porcentaje), stat = \"identity\", fill=\"red\", alpha = 0.1)+\n  geom_line(data = pref, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color=Var1), size = 0.8)+\n  geom_point(data = pref, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color=Var1))+\n    geom_text(data=pref, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje),label = round(Freq, 0)), vjust = -0.7, hjust = 0.3, size = 2.7,show.legend = F)+  \n  theme_classic() +\n  labs(\n    x = \"Posición ideológica (1-10)\",\n    caption = \"Evolución de las preferencias por los candidatos para los votantes del PSOE según su ideología\"\n  ) +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = 9),\n    axis.title = element_text(size = 10)\n  ) +\n  scale_y_continuous(\n    name = \"Porcentaje de votantes\", # Eje izquierdo\n    sec.axis = sec_axis(~ . * max(pref$Freq) / max(ideol_psoe$porcentaje), name = \"Preferencia de candidatos\") # Eje derecho\n  )+\n  scale_color_manual(values=c(\"Sánchez\"=\"red\",\"Casado\"=\"blue\",\"Indiferente\"=\"grey\"))+\n  scale_x_continuous(breaks = seq(1,10,by=2))\n\n\nggplot(ideol_psoe, aes(x = ideol)) +\n\n## Barras (eje primario)\n  geom_bar(aes(y = porcentaje), \n           stat = \"identity\", # Hay que añadirlo porque los datos ya están en formato un % por cada valor del eje x\n           fill=\"red\", # Color de las barras\n           alpha = 0.1)+ # Nivel de transparencia de las barras\n\n## Línea (eje secundario)\n  geom_line(data = pref, aes(x = ideol, # Datos nuevos para las líneas\n                             y = Freq / max(Freq) * max(ideol_psoe$porcentaje), # Es neesaria esta transformación para que haya dos ejes independientes\n                             group = Var1, color=Var1), # Variables de agrupación para que haya varias líneas\n            size = 0.8)+ # El tamaño de las líneas\n\n## Puntos de las líneas\n  geom_point(data = pref, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje), group = Var1, color=Var1))+\n\n## Texto de los % sobre cada punto de las líneas\n    geom_text(data=pref, aes(x = ideol, y = Freq / max(Freq) * max(ideol_psoe$porcentaje),label = round(Freq, 0)), vjust = -0.7, hjust = 0.3, size = 2.7,show.legend = F)+\n\n## Tema y etiquetas\n  theme_classic() + # Tema con el fondo en blanco\n  labs(\n    x = \"Posición ideológica (1-10)\", # Etiqueta del eje x\n    caption = \"Evolución de las preferencias por los candidatos para los votantes del PSOE según su ideología\" \n    # El caption es el texto en el pie del gráfico\n  ) +\n  theme(\n    legend.position = \"bottom\", # Posición de la leyenda (abajo en lugar de en el lado)\n    legend.title = element_blank(), # Para eliminar el título del gráfico\n    legend.text = element_text(size = 9), # Tamaño de la leyenda\n    axis.title = element_text(size = 10) # Tamaño de los títulos de los ejes\n  ) +\n\n## Dos ejes con escalas independientes\n  scale_y_continuous(\n    name = \"Porcentaje de votantes\", # Eje izquierdo\n    sec.axis = sec_axis(~ . * max(pref$Freq) / max(ideol_psoe$porcentaje), name = \"Preferencia de candidatos\"))+ # Eje derecho\n  scale_color_manual(values=c(\"Sánchez\"=\"red\",\"Casado\"=\"blue\",\"Indiferente\"=\"grey\"))+ # Cambiar el color de las líneas\n\n## Personalizar el eje x\n  scale_x_continuous(breaks = seq(1,10,by=2))\n\n\n\n\n\n\n\n\n\n\n\nideol_psoe\n\n\n\n\n\n\n\npref",
    "crumbs": [
      "Gráficos",
      "Otros gráficos"
    ]
  },
  {
    "objectID": "02_graficos/8g_otros.html#gráficos-de-cajas-y-violines",
    "href": "02_graficos/8g_otros.html#gráficos-de-cajas-y-violines",
    "title": "Otros gráficos",
    "section": "Gráficos de cajas y violines",
    "text": "Gráficos de cajas y violines\n\nGráfico de cajas\n\nGráficoCódigoCódigo anotado\n\n\n\n\n\n\n\n\n\nggplot(data = desempleo_juvenil, aes(x = Country, y = Value, fill=Country)) +\n  geom_boxplot(color=\"black\",\n               alpha=0.3) +\n  geom_jitter(color=\"black\", size=0.4, alpha=0.3)+\n  ggtitle(\"Diagrama de cajas y evolución temporal del paro juvenil\")+\n  theme_classic()+\n  labs(\n    x = \"País\",\n    y = \"Desempleo juvenil (%)\") +\n  stat_boxplot(geom = \"errorbar\",\n               width = 0.25) +\n  theme(legend.position = \"none\",\n        plot.title = element_text(hjust = 0.5, size = 11))+\n  scale_x_discrete(labels = c(Spain = \"España\", Italy = \"Italia\", Netherlands = \"Paises Bajos\")) +\n  scale_fill_manual(\n    values = c(Spain = \"blue\", Italy = \"red\", Austria = \"purple\", Netherlands = \"green\"))\n\n\nggplot(data = desempleo_juvenil, aes(x = Country, y = Value, fill=Country)) +\n\n## Comando del gráfico de cajas\n    geom_boxplot(color=\"black\", # Bordes de color negro\n               alpha=0.3) + # Transparencia del relleno\n\n## Añadir los puntos de distribución\n    geom_jitter(color=\"black\", size=0.4, alpha=0.3)+\n\n## Personalización del gráfico\n  ggtitle(\"Diagrama de cajas y evolución temporal del paro juvenil\")+ # Añadirle un título\n  theme_classic()+ #Tema con el fondo blanco\n  labs( # Etiquetas de los ejes\n    x = \"País\",\n    y = \"Desempleo juvenil (%)\") +\n  stat_boxplot(geom = \"errorbar\",width = 0.25)+ # Añade las líneas horizontales que indican los datos extremos (si no lo pones solo aparecen las verticales)\n  theme(legend.position = \"none\", # Elimina la leyenda\n        plot.title = element_text(hjust = 0.5, size = 11))+ # Ajustes del título\n  scale_x_discrete(labels = c(Spain = \"España\", Italy = \"Italia\", Netherlands = \"Paises Bajos\")) + # Cambiar el nombre de las etiquetas del eje x\n  scale_fill_manual(values = c(Spain = \"blue\", Italy = \"red\", Austria = \"purple\", Netherlands = \"green\")) # Cambiar los colores\n\n\n\n\n\nGráfico de violines\n\nGráficoCódigoCódigo anotado\n\n\n\n\n\n\n\n\n\nggplot(datos,aes(x=intención, y=ideol, fill=intención))+\n  theme_classic()+\n  scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2))+\n  geom_hline(yintercept = c(0,2,4,6,8,10), color = \"lightgrey\", alpha = 0.5)+\n  geom_violin(width=1, alpha=0.5, adjust = 1.6)+ #width es para hacer más ancho cada violin, y adjust para lo suaves que son las curvas\n  geom_boxplot(width=0.1, color=\"grey\", alpha=0.4) +\n  scale_fill_manual(values = c(PP = \"#458CFF\", PSOE = \"red\", Podemos = \"purple\", Vox = \"green\", Sumar=\"pink\",SALF=\"darkgrey\"))+\n  theme(plot.title = element_text(hjust = 0.5),\n        legend.position=\"none\")+\n  labs(title=\"Media ideología de los votantes de cada partido\",\n       x=\"Votantes de cada partido\\n(intención)\", \n       y=\"Ideología\\n(0-10)\",\n       caption=\"Fuente: elaboración propia. Datos de 40dB\")\n\n\nggplot(datos,aes(x=intención, y=ideol, fill=intención))+\n\n## Líneas horizontales de fondo\n  scale_y_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 2))+ # Los límites del eje y\n  geom_hline(yintercept = c(0,2,4,6,8,10), color = \"lightgrey\", alpha = 0.5)+ # Las líneas grises de fondo\n\n## Gráfico de violines\n  geom_violin(width=1, alpha=0.5, adjust = 1.6)+ #width es para hacer más ancho cada violin, y adjust para lo suaves que son las curvas\n\n## Gráfico de cajas dentro de los violines\n  geom_boxplot(width=0.1, color=\"grey\", alpha=0.4) +\n\n## Personalización del gráfico\n  scale_fill_manual(values = c(PP = \"#458CFF\", PSOE = \"red\", Podemos = \"purple\", Vox = \"green\", Sumar=\"pink\",SALF=\"darkgrey\"))+ # Cambiar los colores\n  theme_classic()+ # El tema del fondo\n  theme(plot.title = element_text(hjust = 0.5), # Centrar el título\n        legend.position=\"none\")+ # Eliminar la leyenda\n  labs(title=\"Media ideología de los votantes de cada partido\",\n       x=\"Votantes de cada partido\\n(intención)\", \n       y=\"Ideología\\n(0-10)\", \n       caption=\"Fuente: elaboración propia. Datos de 40dB\")",
    "crumbs": [
      "Gráficos",
      "Otros gráficos"
    ]
  },
  {
    "objectID": "02_graficos/8g_lineas.html",
    "href": "02_graficos/8g_lineas.html",
    "title": "Gráficos de líneas",
    "section": "",
    "text": "GráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(cis_pop_recu, aes(x=mes, y=Feijoo, color=recuerdo, group=recuerdo)) +\n  geom_hline(yintercept = seq(1, 10, by = 1), color = \"lightgrey\", alpha = 0.5)+\n  geom_line(linewidth=0.9, linetype=1)+\n  geom_point()+\n  theme_classic()+\n  labs(x=\"Mes de la encuesta\",\n       y=\"Valoración media (1 al 10)\",\n       caption = \"Evolución de la valoración de Alberto Nuñez Feijoo según el recuerdo de voto\\nFuente: elaboración propia a partir de los datos del CIS\")+\n  theme(\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 10))+\n  scale_color_manual(values=colores_cis)+\n    geom_text(aes(label = round(Feijoo, 1)), vjust = -0.5, size = 2.5,show.legend = F)+\n  scale_y_continuous(limits = c(1,10), breaks = seq(0,10, by=2))\n\n\nggplot(cis_pop_recu, aes(x=mes, y=Feijoo, color=recuerdo, group=recuerdo)) +\n\n## Líneas grises de fondo\n  geom_hline(yintercept = seq(1, 10, by = 1), color = \"lightgrey\", alpha = 0.5)+\n  \n## Líneas, puntos y anotaciones\n  geom_line(linewidth=0.9, linetype=1)+\n  geom_point()+\n  geom_text(aes(label = round(Feijoo, 1)), vjust = -0.5, size = 2.5,show.legend = F)+\n  \n## Otros ajustes\n  scale_y_continuous(limits = c(1,10), breaks = seq(0,10, by=2))+ # Personalizar el eje x\n  theme_classic()+ # El tema del fondo (en blanco)\n  labs(x=\"Mes de la encuesta\", # Etiqueta del eje x\n       y=\"Valoración media (1 al 10)\", #La etiqueta del eje y\n       caption = \"Evolución de la valoración de Alberto Nuñez Feijoo según el recuerdo de voto\\nFuente: elaboración propia a partir de los datos del CIS\")+ # El texto del pio\n  theme(\n        legend.position = \"bottom\", # Posición de la leyenda\n        legend.title = element_blank(), # Leyenda sin título\n        legend.text = element_text(size = 9), # Tamaño de la leyenda\n        axis.title = element_text(size = 10))+\n  scale_color_manual(values=colores_cis) # Colores personalizados para cada partido (se establece antes la equivalencia en un vector)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(data = gasto_desempleo, aes(x = TIME, y = Value, color = Country, group = Country)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    x = \"Año\",\n    y = \"% PIB\",\n    color = \"Países\",\n    caption = \"Fuente: elaboración propia a partir de datos de Eurostat\") +\n  ggtitle(\"Gasto gubernamental en prestaciones por desempleo\") +\n  theme(plot.title = element_text(hjust = 0.5))+\n  scale_color_manual(values = c(Spain = \"blue\", Italy = \"red\", Netherlands = \"green\", Austria = \"purple\")) +\n  theme_minimal() +\n  scale_x_continuous(\n    limits = c(2000, 2019),\n    breaks = c(2000, 2004, 2008, 2012, 2016, 2019),\n    labels = scales::number_format(accuracy = 1)) +\n  geom_vline(xintercept = 2008, linetype = \"dashed\", color = \"black\")\n\n\nggplot(data = gasto_desempleo, aes(x = TIME, y = Value, color = Country, group = Country)) +\n\n## Líneas + puntos\n  geom_line() +\n  geom_point() +\n  \n## Etiquetas\n  labs(\n    x = \"Año\",\n    y = \"% PIB\",\n    color = \"Países\",\n    caption = \"Fuente: elaboración propia a partir de datos de Eurostat\") +\n  ggtitle(\"Gasto gubernamental en prestaciones por desempleo\")+\n  theme(plot.title = element_text(hjust = 0.5))+ # Para centrar el título del gráfico\n  \n## Colores personalizados para las líneas\n  scale_color_manual(values = c(Spain = \"blue\", Italy = \"red\", Netherlands = \"green\", Austria = \"purple\")) +\n  \n## Tema del gráfico\n  theme_minimal() +\n## Ajuste de las cifras mostradas en el eje x\n  scale_x_continuous(\n    limits = c(2000, 2019),\n    breaks = c(2000, 2004, 2008, 2012, 2016, 2019),\n    labels = scales::number_format(accuracy = 1)) +\n    \n## Añadir línea de puntos vertical para el año 2008\n  geom_vline(xintercept = 2008, linetype = \"dashed\", color = \"black\")",
    "crumbs": [
      "Gráficos",
      "Gráficos de líneas"
    ]
  },
  {
    "objectID": "02_graficos/8g_lineas.html#evolución-temporal",
    "href": "02_graficos/8g_lineas.html#evolución-temporal",
    "title": "Gráficos de líneas",
    "section": "",
    "text": "GráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(cis_pop_recu, aes(x=mes, y=Feijoo, color=recuerdo, group=recuerdo)) +\n  geom_hline(yintercept = seq(1, 10, by = 1), color = \"lightgrey\", alpha = 0.5)+\n  geom_line(linewidth=0.9, linetype=1)+\n  geom_point()+\n  theme_classic()+\n  labs(x=\"Mes de la encuesta\",\n       y=\"Valoración media (1 al 10)\",\n       caption = \"Evolución de la valoración de Alberto Nuñez Feijoo según el recuerdo de voto\\nFuente: elaboración propia a partir de los datos del CIS\")+\n  theme(\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 10))+\n  scale_color_manual(values=colores_cis)+\n    geom_text(aes(label = round(Feijoo, 1)), vjust = -0.5, size = 2.5,show.legend = F)+\n  scale_y_continuous(limits = c(1,10), breaks = seq(0,10, by=2))\n\n\nggplot(cis_pop_recu, aes(x=mes, y=Feijoo, color=recuerdo, group=recuerdo)) +\n\n## Líneas grises de fondo\n  geom_hline(yintercept = seq(1, 10, by = 1), color = \"lightgrey\", alpha = 0.5)+\n  \n## Líneas, puntos y anotaciones\n  geom_line(linewidth=0.9, linetype=1)+\n  geom_point()+\n  geom_text(aes(label = round(Feijoo, 1)), vjust = -0.5, size = 2.5,show.legend = F)+\n  \n## Otros ajustes\n  scale_y_continuous(limits = c(1,10), breaks = seq(0,10, by=2))+ # Personalizar el eje x\n  theme_classic()+ # El tema del fondo (en blanco)\n  labs(x=\"Mes de la encuesta\", # Etiqueta del eje x\n       y=\"Valoración media (1 al 10)\", #La etiqueta del eje y\n       caption = \"Evolución de la valoración de Alberto Nuñez Feijoo según el recuerdo de voto\\nFuente: elaboración propia a partir de los datos del CIS\")+ # El texto del pio\n  theme(\n        legend.position = \"bottom\", # Posición de la leyenda\n        legend.title = element_blank(), # Leyenda sin título\n        legend.text = element_text(size = 9), # Tamaño de la leyenda\n        axis.title = element_text(size = 10))+\n  scale_color_manual(values=colores_cis) # Colores personalizados para cada partido (se establece antes la equivalencia en un vector)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(data = gasto_desempleo, aes(x = TIME, y = Value, color = Country, group = Country)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    x = \"Año\",\n    y = \"% PIB\",\n    color = \"Países\",\n    caption = \"Fuente: elaboración propia a partir de datos de Eurostat\") +\n  ggtitle(\"Gasto gubernamental en prestaciones por desempleo\") +\n  theme(plot.title = element_text(hjust = 0.5))+\n  scale_color_manual(values = c(Spain = \"blue\", Italy = \"red\", Netherlands = \"green\", Austria = \"purple\")) +\n  theme_minimal() +\n  scale_x_continuous(\n    limits = c(2000, 2019),\n    breaks = c(2000, 2004, 2008, 2012, 2016, 2019),\n    labels = scales::number_format(accuracy = 1)) +\n  geom_vline(xintercept = 2008, linetype = \"dashed\", color = \"black\")\n\n\nggplot(data = gasto_desempleo, aes(x = TIME, y = Value, color = Country, group = Country)) +\n\n## Líneas + puntos\n  geom_line() +\n  geom_point() +\n  \n## Etiquetas\n  labs(\n    x = \"Año\",\n    y = \"% PIB\",\n    color = \"Países\",\n    caption = \"Fuente: elaboración propia a partir de datos de Eurostat\") +\n  ggtitle(\"Gasto gubernamental en prestaciones por desempleo\")+\n  theme(plot.title = element_text(hjust = 0.5))+ # Para centrar el título del gráfico\n  \n## Colores personalizados para las líneas\n  scale_color_manual(values = c(Spain = \"blue\", Italy = \"red\", Netherlands = \"green\", Austria = \"purple\")) +\n  \n## Tema del gráfico\n  theme_minimal() +\n## Ajuste de las cifras mostradas en el eje x\n  scale_x_continuous(\n    limits = c(2000, 2019),\n    breaks = c(2000, 2004, 2008, 2012, 2016, 2019),\n    labels = scales::number_format(accuracy = 1)) +\n    \n## Añadir línea de puntos vertical para el año 2008\n  geom_vline(xintercept = 2008, linetype = \"dashed\", color = \"black\")",
    "crumbs": [
      "Gráficos",
      "Gráficos de líneas"
    ]
  },
  {
    "objectID": "02_graficos/8g_lineas.html#líneas-rellenas",
    "href": "02_graficos/8g_lineas.html#líneas-rellenas",
    "title": "Gráficos de líneas",
    "section": "Líneas rellenas",
    "text": "Líneas rellenas\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nlibrary(ggh4x)\n\ng&lt;-ggplot(data = brecha_edad, aes(x=edad)) + #y=porcentaje, color=genero, group=genero\n  scale_x_continuous(limits=c(15,90),breaks=c(10,20,30,40,50,60,70,80,90))+\n  scale_y_continuous(limits=c(0,40),breaks=c(0,10,20,30,40))+\n  geom_hline(yintercept = c(0, 10, 20,30,40), color = \"lightgrey\", alpha = 0.5)+\n  geom_vline(xintercept=c(35,65), color=\"black\", linetype=\"dashed\")+\n  theme_classic()+\n  labs(x=\"Edad\",y=\"Porcentaje de manifestantes\",caption = \"Figura 2: Porcentaje de manifestantes para cada edad según su género\" )+\n  theme(plot.caption = element_text(hjust=0,family=\"Times New Roman\",size=15), #Ajustes del caption\n        text = element_text(size = 11),\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 10),\n        axis.title = element_text(size = 12)) +\n  geom_line(aes(y=Mujer),color=\"#51DA2C\",size=1.15)+\n  geom_line(aes(y=Hombre),color=\"#130081\",size=1.15)+\n  stat_difference(aes(ymin = Hombre, ymax = Mujer), alpha = 0.5,) +\n  scale_fill_manual(values = c(\"#51DA2C\", \"#130081\"), labels=c(\"Mujer\",\"Hombre\"))\ng+annotate(\"text\",x=c(23,50,80), y=c(39,39,39),label=c(\"Jóvenes\", \"Adultos\", \"Ancianos\"),size=3.6)\n\n\nlibrary(ggh4x)\n\ng&lt;-ggplot(data = brecha_edad, aes(x=edad)) +\n\n## Personalizar los ejes\n  scale_x_continuous(limits=c(15,90),breaks=c(10,20,30,40,50,60,70,80,90))+\n  scale_y_continuous(limits=c(0,40),breaks=c(0,10,20,30,40))+\n  geom_hline(yintercept = c(0, 10, 20,30,40), color = \"lightgrey\", alpha = 0.5)+\n  geom_vline(xintercept=c(35,65), color=\"black\", linetype=\"dashed\")+\n  \n## Ajustes estéticos del gráfico\n  theme_classic()+\n  labs(x=\"Edad\",y=\"Porcentaje de manifestantes\",caption = \"Figura 2: Porcentaje de manifestantes para cada edad según su género\" )+\n  theme(plot.caption = element_text(hjust=0,family=\"Times New Roman\",size=15), \n        text = element_text(size = 11),\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 10),\n        axis.title = element_text(size = 12)) +\n        \n## Lineas y relleno\n  geom_line(aes(y=Mujer),color=\"#51DA2C\",size=1.15)+ # Línea para las mujeres\n  geom_line(aes(y=Hombre),color=\"#130081\",size=1.15)+ # Línea para los hombres\n  stat_difference(aes(ymin = Hombre, ymax = Mujer), alpha = 0.5,) + # El relleno entre las líneas\n  scale_fill_manual(values = c(\"#51DA2C\", \"#130081\"), labels=c(\"Mujer\",\"Hombre\")) # Personalizar el relleno \n\n## Añadir las etiquetas de la edad\ng+annotate(\"text\",x=c(23,50,80), y=c(39,39,39),label=c(\"Jóvenes\", \"Adultos\", \"Ancianos\"),size=3.6)\n\n\nEl mismo que en los casos anteriores (tres columnas, datos alargados)",
    "crumbs": [
      "Gráficos",
      "Gráficos de líneas"
    ]
  },
  {
    "objectID": "02_graficos/8g_barras.html",
    "href": "02_graficos/8g_barras.html",
    "title": "Gráficos de barras",
    "section": "",
    "text": "GráficoCódigoCódigo anotado\n\n\n\n\n\n\n\n\n\nggplot(datos, aes(x = ideol, y = freq, fill = partido)) +\n  geom_hline(yintercept = c(0, 5, 10, 15, 20, 25), color = \"lightgrey\", alpha = 0.5) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha=0.8) +\n  theme_classic() +\n  labs(x = \"Posición ideológica (0-10)\",\n       y = \"Porcentaje de votantes\",\n       caption = \"Distribución en la escala ideológica de los votantes del PP y PSOE\\nFuente: elaboración propia a partir de los datos de 40db\") +\n  geom_text(aes(label = paste0(round(freq, 1), \"%\")), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+\n  scale_fill_manual(values=c(\"PP\"=\"#17589d\", \"PSOE\"=\"#FF1C1C\"))+\n  theme(\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 10))\n\n\nggplot(datos, aes(x = ideol, y = freq, fill = partido)) +\n\n## Línes de fondo para indicar los valores del eje y\n  geom_hline(yintercept = c(0, 5, 10, 15, 20, 25), color = \"lightgrey\", alpha = 0.5) +\n  \n## Las barras\n  geom_bar(stat = \"identity\", position = \"dodge\",\n           alpha=0.8) + # Alpha indica la transparencia de las barras (cuanto menor es el número, más transparentes)\n\n## Ajustes estéticos\n  theme_classic() + # Tema del fondo (en blanco)\n  labs(x = \"Posición ideológica (0-10)\", # Etiqueta eje x\n       y = \"Porcentaje de votantes\", # Etiqueta eje y\n       caption = \"Distribución en la escala ideológica de los votantes del PP y PSOE\\nFuente: elaboración propia a partir de los datos de 40db\") + # Texto a pie de gráfico. El \\n indica que se pasa a otra línea.\n  geom_text(aes(label = paste0(round(freq, 1), \"%\")), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+ # Los números del % encima de las barras\n  scale_fill_manual(values=c(\"PP\"=\"#17589d\", \"PSOE\"=\"#FF1C1C\"))+ # Color del relleno\n  theme( #Ajustes del tamaño y posición de los títulos\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 10))\n\n\n\n\n\n\n\nGráficoCódigoCódigo anotado\n\n\n\n\n\n\n\n\n\nggplot(brecha_gen, aes(x = gen, y = porcentaje, fill = genero)) +\n  scale_y_continuous(limits=c(0,30))+\n  geom_hline(yintercept = c(0, 10, 20,30), color = \"lightgrey\", alpha = 0.5) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.94), width = 0.87, colour=\"black\") +\n  labs(x = \"Generación\", y = \"Porcentaje de manifestantes\", fill = \"Género\", caption = \"Figura 3: Porcentaje de manifestantes en cada generación según su género\") +\n  theme_classic() +\n  geom_text(aes(label = porcentaje, y = porcentaje + 1),\n            position = position_dodge(width = 1), vjust = 1.1, size = 3) +\n  theme(plot.caption = element_text(hjust=0,family=\"Times New Roman\",size=15), #Ajustes del caption\n        text = element_text(size = 11),  # Tamaño del texto del gráfico\n        legend.position = \"bottom\",      # Posición de la leyenda\n        legend.title = element_blank(),   # Elimina el título de la leyenda\n        legend.text = element_text(size = 9),  # Tamaño del texto de la leyenda\n        axis.title = element_text(size = 12)) +  # Tamaño del texto de los títulos de los ejes\n  scale_fill_manual(values=c(\"Hombre\"=\"#d8d8d8\", \"Mujer\"=\"#777777\"))\n\n\nggplot(brecha_gen, aes(x = gen, y = porcentaje, fill = genero)) +\n\n## Ajustes del eje y: limites y líneas grises del fondo\n  scale_y_continuous(limits=c(0,30))+\n  geom_hline(yintercept = c(0, 10, 20,30), color = \"lightgrey\", alpha = 0.5) +\n\n## El gráfico de barras\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.94), width = 0.87, colour=\"black\") +\n\n## Otros ajustes estéticos (iguales que en el gráfico anterior)\n  labs(x = \"Generación\", y = \"Porcentaje de manifestantes\", fill = \"Género\", caption = \"Figura 3: Porcentaje de manifestantes en cada generación según su género\") +\n  theme_classic() +\n  geom_text(aes(label = porcentaje, y = porcentaje + 1),\n            position = position_dodge(width = 1), vjust = 1.1, size = 3) +\n  theme(plot.caption = element_text(hjust=0,family=\"Times New Roman\",size=15), #Ajustes del caption\n        text = element_text(size = 11),  # Tamaño del texto del gráfico\n        legend.position = \"bottom\",      # Posición de la leyenda\n        legend.title = element_blank(),   # Elimina el título de la leyenda\n        legend.text = element_text(size = 9),  # Tamaño del texto de la leyenda\n        axis.title = element_text(size = 12)) +  # Tamaño del texto de los títulos de los ejes\n  scale_fill_manual(values=c(\"Hombre\"=\"#d8d8d8\", \"Mujer\"=\"#777777\"))\n\n\n\n\n\n\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(diferencias_dcha, aes(x = Tema, y = diferencias, fill = Partido)) +\n  geom_hline(yintercept = seq(0,5,by=0.5), color = \"lightgrey\", alpha = 0.3) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha=0.8) +\n  theme_classic() +\n  labs(x = NULL,\n       y = \"Diferencia (0-10)\",\n       caption = \"Distancia entre el Vox y PP y los votantes de derechas y centro.\\nLa distancia se ha medido como la resta de la media del partido menos la del grupo ideológico (términos absolutos).\",\n       fill=\"Partido-ideología:\") +\n  geom_text(aes(label = round(diferencias, 2)), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+\n  theme(legend.position = \"bottom\",\n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 12))+\n  scale_fill_manual(\n    values = c(\"PP_c\"=\"#85B9ED\",\"PP_d\"=\"#17589d\",\"Vox_c\"=\"#B3E384\",\"Vox_d\"=\"#63ac33\"),\n    labels = c(\"PP_c\" = \"PP (centro)\",\"PP_d\" = \"PP (derecha)\",\"Vox_c\" = \"Vox (centro)\",\"Vox_d\" = \"Vox (derecha)\"))+\n  scale_x_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))\n\n\nggplot(diferencias_dcha, aes(x = Tema, y = diferencias, fill = Partido)) +\n\n## Ajustes del eje y: líneas grises del fondo\n  geom_hline(yintercept = seq(0,5,by=0.5), color = \"lightgrey\", alpha = 0.3) +\n\n## El gráfico de barras\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha=0.8) +\n\n## Otros ajustes estéticos (iguales que en el primer gráfico)\n  theme_classic() +\n  labs(x = NULL,\n       y = \"Diferencia (0-10)\",\n       caption = \"Distancia entre el Vox y PP y los votantes de derechas y centro.\\nLa distancia se ha medido como la resta de la media del partido menos la del grupo ideológico (términos absolutos).\",\n       fill=\"Partido-ideología:\") +\n  geom_text(aes(label = round(diferencias, 2)), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+\n  theme(legend.position = \"bottom\",\n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 12))+\n  scale_fill_manual(\n    values = c(\"PP_c\"=\"#85B9ED\",\"PP_d\"=\"#17589d\",\"Vox_c\"=\"#B3E384\",\"Vox_d\"=\"#63ac33\"),\n    labels = c(\"PP_c\" = \"PP (centro)\",\"PP_d\" = \"PP (derecha)\",\"Vox_c\" = \"Vox (centro)\",\"Vox_d\" = \"Vox (derecha)\"))+\n\n## Para cambiar las etiquetas del eje x\n  scale_x_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))",
    "crumbs": [
      "Gráficos",
      "Gráficos de barras"
    ]
  },
  {
    "objectID": "02_graficos/8g_barras.html#barras-divididas-según-una-tercera-variable",
    "href": "02_graficos/8g_barras.html#barras-divididas-según-una-tercera-variable",
    "title": "Gráficos de barras",
    "section": "",
    "text": "GráficoCódigoCódigo anotado\n\n\n\n\n\n\n\n\n\nggplot(datos, aes(x = ideol, y = freq, fill = partido)) +\n  geom_hline(yintercept = c(0, 5, 10, 15, 20, 25), color = \"lightgrey\", alpha = 0.5) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha=0.8) +\n  theme_classic() +\n  labs(x = \"Posición ideológica (0-10)\",\n       y = \"Porcentaje de votantes\",\n       caption = \"Distribución en la escala ideológica de los votantes del PP y PSOE\\nFuente: elaboración propia a partir de los datos de 40db\") +\n  geom_text(aes(label = paste0(round(freq, 1), \"%\")), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+\n  scale_fill_manual(values=c(\"PP\"=\"#17589d\", \"PSOE\"=\"#FF1C1C\"))+\n  theme(\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 10))\n\n\nggplot(datos, aes(x = ideol, y = freq, fill = partido)) +\n\n## Línes de fondo para indicar los valores del eje y\n  geom_hline(yintercept = c(0, 5, 10, 15, 20, 25), color = \"lightgrey\", alpha = 0.5) +\n  \n## Las barras\n  geom_bar(stat = \"identity\", position = \"dodge\",\n           alpha=0.8) + # Alpha indica la transparencia de las barras (cuanto menor es el número, más transparentes)\n\n## Ajustes estéticos\n  theme_classic() + # Tema del fondo (en blanco)\n  labs(x = \"Posición ideológica (0-10)\", # Etiqueta eje x\n       y = \"Porcentaje de votantes\", # Etiqueta eje y\n       caption = \"Distribución en la escala ideológica de los votantes del PP y PSOE\\nFuente: elaboración propia a partir de los datos de 40db\") + # Texto a pie de gráfico. El \\n indica que se pasa a otra línea.\n  geom_text(aes(label = paste0(round(freq, 1), \"%\")), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+ # Los números del % encima de las barras\n  scale_fill_manual(values=c(\"PP\"=\"#17589d\", \"PSOE\"=\"#FF1C1C\"))+ # Color del relleno\n  theme( #Ajustes del tamaño y posición de los títulos\n        legend.position = \"bottom\",\n        legend.title = element_blank(), \n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 10))\n\n\n\n\n\n\n\nGráficoCódigoCódigo anotado\n\n\n\n\n\n\n\n\n\nggplot(brecha_gen, aes(x = gen, y = porcentaje, fill = genero)) +\n  scale_y_continuous(limits=c(0,30))+\n  geom_hline(yintercept = c(0, 10, 20,30), color = \"lightgrey\", alpha = 0.5) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.94), width = 0.87, colour=\"black\") +\n  labs(x = \"Generación\", y = \"Porcentaje de manifestantes\", fill = \"Género\", caption = \"Figura 3: Porcentaje de manifestantes en cada generación según su género\") +\n  theme_classic() +\n  geom_text(aes(label = porcentaje, y = porcentaje + 1),\n            position = position_dodge(width = 1), vjust = 1.1, size = 3) +\n  theme(plot.caption = element_text(hjust=0,family=\"Times New Roman\",size=15), #Ajustes del caption\n        text = element_text(size = 11),  # Tamaño del texto del gráfico\n        legend.position = \"bottom\",      # Posición de la leyenda\n        legend.title = element_blank(),   # Elimina el título de la leyenda\n        legend.text = element_text(size = 9),  # Tamaño del texto de la leyenda\n        axis.title = element_text(size = 12)) +  # Tamaño del texto de los títulos de los ejes\n  scale_fill_manual(values=c(\"Hombre\"=\"#d8d8d8\", \"Mujer\"=\"#777777\"))\n\n\nggplot(brecha_gen, aes(x = gen, y = porcentaje, fill = genero)) +\n\n## Ajustes del eje y: limites y líneas grises del fondo\n  scale_y_continuous(limits=c(0,30))+\n  geom_hline(yintercept = c(0, 10, 20,30), color = \"lightgrey\", alpha = 0.5) +\n\n## El gráfico de barras\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.94), width = 0.87, colour=\"black\") +\n\n## Otros ajustes estéticos (iguales que en el gráfico anterior)\n  labs(x = \"Generación\", y = \"Porcentaje de manifestantes\", fill = \"Género\", caption = \"Figura 3: Porcentaje de manifestantes en cada generación según su género\") +\n  theme_classic() +\n  geom_text(aes(label = porcentaje, y = porcentaje + 1),\n            position = position_dodge(width = 1), vjust = 1.1, size = 3) +\n  theme(plot.caption = element_text(hjust=0,family=\"Times New Roman\",size=15), #Ajustes del caption\n        text = element_text(size = 11),  # Tamaño del texto del gráfico\n        legend.position = \"bottom\",      # Posición de la leyenda\n        legend.title = element_blank(),   # Elimina el título de la leyenda\n        legend.text = element_text(size = 9),  # Tamaño del texto de la leyenda\n        axis.title = element_text(size = 12)) +  # Tamaño del texto de los títulos de los ejes\n  scale_fill_manual(values=c(\"Hombre\"=\"#d8d8d8\", \"Mujer\"=\"#777777\"))\n\n\n\n\n\n\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(diferencias_dcha, aes(x = Tema, y = diferencias, fill = Partido)) +\n  geom_hline(yintercept = seq(0,5,by=0.5), color = \"lightgrey\", alpha = 0.3) +\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha=0.8) +\n  theme_classic() +\n  labs(x = NULL,\n       y = \"Diferencia (0-10)\",\n       caption = \"Distancia entre el Vox y PP y los votantes de derechas y centro.\\nLa distancia se ha medido como la resta de la media del partido menos la del grupo ideológico (términos absolutos).\",\n       fill=\"Partido-ideología:\") +\n  geom_text(aes(label = round(diferencias, 2)), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+\n  theme(legend.position = \"bottom\",\n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 12))+\n  scale_fill_manual(\n    values = c(\"PP_c\"=\"#85B9ED\",\"PP_d\"=\"#17589d\",\"Vox_c\"=\"#B3E384\",\"Vox_d\"=\"#63ac33\"),\n    labels = c(\"PP_c\" = \"PP (centro)\",\"PP_d\" = \"PP (derecha)\",\"Vox_c\" = \"Vox (centro)\",\"Vox_d\" = \"Vox (derecha)\"))+\n  scale_x_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))\n\n\nggplot(diferencias_dcha, aes(x = Tema, y = diferencias, fill = Partido)) +\n\n## Ajustes del eje y: líneas grises del fondo\n  geom_hline(yintercept = seq(0,5,by=0.5), color = \"lightgrey\", alpha = 0.3) +\n\n## El gráfico de barras\n  geom_bar(stat = \"identity\", position = \"dodge\", alpha=0.8) +\n\n## Otros ajustes estéticos (iguales que en el primer gráfico)\n  theme_classic() +\n  labs(x = NULL,\n       y = \"Diferencia (0-10)\",\n       caption = \"Distancia entre el Vox y PP y los votantes de derechas y centro.\\nLa distancia se ha medido como la resta de la media del partido menos la del grupo ideológico (términos absolutos).\",\n       fill=\"Partido-ideología:\") +\n  geom_text(aes(label = round(diferencias, 2)), position = position_dodge(width = 0.9), vjust = -0.5, size = 3)+\n  theme(legend.position = \"bottom\",\n        legend.text = element_text(size = 9),\n        axis.title = element_text(size = 12))+\n  scale_fill_manual(\n    values = c(\"PP_c\"=\"#85B9ED\",\"PP_d\"=\"#17589d\",\"Vox_c\"=\"#B3E384\",\"Vox_d\"=\"#63ac33\"),\n    labels = c(\"PP_c\" = \"PP (centro)\",\"PP_d\" = \"PP (derecha)\",\"Vox_c\" = \"Vox (centro)\",\"Vox_d\" = \"Vox (derecha)\"))+\n\n## Para cambiar las etiquetas del eje x\n  scale_x_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))",
    "crumbs": [
      "Gráficos",
      "Gráficos de barras"
    ]
  },
  {
    "objectID": "02_graficos/8g_graficos.html#gráficos-de-barras",
    "href": "02_graficos/8g_graficos.html#gráficos-de-barras",
    "title": "Ejemplos",
    "section": "Gráficos de barras:",
    "text": "Gráficos de barras:",
    "crumbs": [
      "Gráficos",
      "Ejemplos"
    ]
  },
  {
    "objectID": "02_graficos/8g_graficos.html#gráficos-de-mancuernas",
    "href": "02_graficos/8g_graficos.html#gráficos-de-mancuernas",
    "title": "Ejemplos",
    "section": "Gráficos de mancuernas:",
    "text": "Gráficos de mancuernas:",
    "crumbs": [
      "Gráficos",
      "Ejemplos"
    ]
  },
  {
    "objectID": "02_graficos/8g_graficos.html#otros-gráficos",
    "href": "02_graficos/8g_graficos.html#otros-gráficos",
    "title": "Ejemplos",
    "section": "Otros gráficos:",
    "text": "Otros gráficos:",
    "crumbs": [
      "Gráficos",
      "Ejemplos"
    ]
  },
  {
    "objectID": "02_graficos/8g_mancuernas.html",
    "href": "02_graficos/8g_mancuernas.html",
    "title": "Gráficos de mancuernas",
    "section": "",
    "text": "GráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(posicion, aes(x = Media, y = Tema, group = Tema))+\n  geom_curve(aes(x = 1.7, y = \"inmigracion\", xend = 2.27, yend = \"lgtb\"),\n    arrow = arrow(length = unit(0.22, \"cm\"), type = \"closed\"),\n    linewidth = 0.7,\n    curvature = -0.4,\n    linetype = 2)+\n  geom_label(\n    label=\"Podemos y PSOE\\n son percibidos\\n en la misma posición \", \n    x=1.5,\n    y=\"inmigracion\",\n    label.size = 0,\n    color = \"black\",\n    size=2.2) +\n  geom_vline(xintercept = seq(0,10, by=1), color = \"lightgrey\", alpha = 0.5)+\n  geom_line(aes(group = Tema), color = \"black\", lwd = 0.5) +\n  geom_point(aes(color = Partido), size = 4, alpha=0.7) + \n  geom_vline(xintercept = 5, linetype = \"dashed\", color = \"black\") +\n  labs(\n    x = \"Media\",\n    y = NULL,\n    caption= \"Medias de ubicación de cada partido según la población.\\nEl 0 indida posiciones más favorables.\",\n    color = \"Partido:\") +\n  theme_classic() +\n  theme(\n    axis.text.y = element_text(size = 9),  \n    axis.text.x = element_text(size = 10),  \n    legend.position = \"bottom\")+\n  scale_x_continuous(limits = c(0,10), breaks = c(0,2,4,6,8,10)) +\n  scale_color_manual(values=colores)+\n  scale_y_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))+\n  geom_text(aes(label = round(Media, 1)), vjust = -1.2, size = 2.5,show.legend = F)\n\n\nggplot(posicion, aes(x = Media, y = Tema, group = Tema))+\n\n## Flecha:\n  geom_curve(aes(x = 1.7, y = \"inmigracion\", xend = 2.27, yend = \"lgtb\"), # Coordenadas de principio y final de la flecha\n    arrow = arrow(length = unit(0.22, \"cm\"), type = \"closed\"), # Tipo de flecha y tamaño\n    linewidth = 0.7, # Ancho de la línea\n    curvature = -0.4,# Flecha con curvatura\n    linetype = 2)+ # Tipo de línea (a rayas)\n\n## El texto de la anotaicón en el gráfico\n  geom_label(\n    label=\"Podemos y PSOE\\n son percibidos\\n en la misma posición \", \n    x=1.5,\n    y=\"inmigracion\",\n    label.size = 0,\n    color = \"black\",\n    size=2.2) +\n\n## Líneas verticales de fondo\n  geom_vline(xintercept = seq(0,10, by=1), color = \"lightgrey\", alpha = 0.5)+ # Las líneas grises para cada valor\n  geom_vline(xintercept = 5, linetype = \"dashed\", color = \"black\") +  # Línea vertical en 5\n\n## Lineas para conectar los puntos en cada tema\n  geom_line(aes(group = Tema), color = \"black\", lwd = 0.5) +\n\n## Puntos para cada partido\n  geom_point(aes(color = Partido), size = 4, alpha=0.7) +\n\n## Otras modificaciones \n  labs(\n    x = \"Media\", # Etiqueta del eje x\n    y = NULL, # Para que no aparezca la etiqueta en el eje y\n    caption= \"Medias de ubicación de cada partido según la población.\\nEl 0 indida posiciones más favorables.\",\n    color = \"Partido:\") + # Texto antes de los valores en el índice\n  theme_classic() + #Tema del gráfico (fondo en blanco)\n  theme(\n    axis.text.y = element_text(size = 9),  #Tamaño del eje y\n    axis.text.x = element_text(size = 10), #Tamaño del eje x\n    legend.position = \"bottom\")+ # Posición de la leyenda\n  scale_x_continuous(limits = c(0,10), breaks = c(0,2,4,6,8,10)) + # Valores del eje x\n  scale_color_manual(values=colores)+ # Colores personalizados para cada partido (se crea un vector antes que indique el color de cada partido)\n\n## Cambiar el texto del eje y\n  scale_y_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))+\n\n## Añadir cifras a los puntos\n  geom_text(aes(label = round(Media, 1)), vjust = -1.2, size = 2.5,show.legend = F)",
    "crumbs": [
      "Gráficos",
      "Gráficos de mancuernas"
    ]
  },
  {
    "objectID": "02_graficos/8g_mancuernas.html#simples-posición",
    "href": "02_graficos/8g_mancuernas.html#simples-posición",
    "title": "Gráficos de mancuernas",
    "section": "",
    "text": "GráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(posicion, aes(x = Media, y = Tema, group = Tema))+\n  geom_curve(aes(x = 1.7, y = \"inmigracion\", xend = 2.27, yend = \"lgtb\"),\n    arrow = arrow(length = unit(0.22, \"cm\"), type = \"closed\"),\n    linewidth = 0.7,\n    curvature = -0.4,\n    linetype = 2)+\n  geom_label(\n    label=\"Podemos y PSOE\\n son percibidos\\n en la misma posición \", \n    x=1.5,\n    y=\"inmigracion\",\n    label.size = 0,\n    color = \"black\",\n    size=2.2) +\n  geom_vline(xintercept = seq(0,10, by=1), color = \"lightgrey\", alpha = 0.5)+\n  geom_line(aes(group = Tema), color = \"black\", lwd = 0.5) +\n  geom_point(aes(color = Partido), size = 4, alpha=0.7) + \n  geom_vline(xintercept = 5, linetype = \"dashed\", color = \"black\") +\n  labs(\n    x = \"Media\",\n    y = NULL,\n    caption= \"Medias de ubicación de cada partido según la población.\\nEl 0 indida posiciones más favorables.\",\n    color = \"Partido:\") +\n  theme_classic() +\n  theme(\n    axis.text.y = element_text(size = 9),  \n    axis.text.x = element_text(size = 10),  \n    legend.position = \"bottom\")+\n  scale_x_continuous(limits = c(0,10), breaks = c(0,2,4,6,8,10)) +\n  scale_color_manual(values=colores)+\n  scale_y_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))+\n  geom_text(aes(label = round(Media, 1)), vjust = -1.2, size = 2.5,show.legend = F)\n\n\nggplot(posicion, aes(x = Media, y = Tema, group = Tema))+\n\n## Flecha:\n  geom_curve(aes(x = 1.7, y = \"inmigracion\", xend = 2.27, yend = \"lgtb\"), # Coordenadas de principio y final de la flecha\n    arrow = arrow(length = unit(0.22, \"cm\"), type = \"closed\"), # Tipo de flecha y tamaño\n    linewidth = 0.7, # Ancho de la línea\n    curvature = -0.4,# Flecha con curvatura\n    linetype = 2)+ # Tipo de línea (a rayas)\n\n## El texto de la anotaicón en el gráfico\n  geom_label(\n    label=\"Podemos y PSOE\\n son percibidos\\n en la misma posición \", \n    x=1.5,\n    y=\"inmigracion\",\n    label.size = 0,\n    color = \"black\",\n    size=2.2) +\n\n## Líneas verticales de fondo\n  geom_vline(xintercept = seq(0,10, by=1), color = \"lightgrey\", alpha = 0.5)+ # Las líneas grises para cada valor\n  geom_vline(xintercept = 5, linetype = \"dashed\", color = \"black\") +  # Línea vertical en 5\n\n## Lineas para conectar los puntos en cada tema\n  geom_line(aes(group = Tema), color = \"black\", lwd = 0.5) +\n\n## Puntos para cada partido\n  geom_point(aes(color = Partido), size = 4, alpha=0.7) +\n\n## Otras modificaciones \n  labs(\n    x = \"Media\", # Etiqueta del eje x\n    y = NULL, # Para que no aparezca la etiqueta en el eje y\n    caption= \"Medias de ubicación de cada partido según la población.\\nEl 0 indida posiciones más favorables.\",\n    color = \"Partido:\") + # Texto antes de los valores en el índice\n  theme_classic() + #Tema del gráfico (fondo en blanco)\n  theme(\n    axis.text.y = element_text(size = 9),  #Tamaño del eje y\n    axis.text.x = element_text(size = 10), #Tamaño del eje x\n    legend.position = \"bottom\")+ # Posición de la leyenda\n  scale_x_continuous(limits = c(0,10), breaks = c(0,2,4,6,8,10)) + # Valores del eje x\n  scale_color_manual(values=colores)+ # Colores personalizados para cada partido (se crea un vector antes que indique el color de cada partido)\n\n## Cambiar el texto del eje y\n  scale_y_discrete(labels=c(\"Inversión contra\\n Cambio Climático\",  \"Servicios Públicos\\n vs. Impuesto Bajos\", \"Inmigración\", \"Derechos LGTBI\\n (adopción)\", \"Descentralización\\n Territorial\"))+\n\n## Añadir cifras a los puntos\n  geom_text(aes(label = round(Media, 1)), vjust = -1.2, size = 2.5,show.legend = F)",
    "crumbs": [
      "Gráficos",
      "Gráficos de mancuernas"
    ]
  },
  {
    "objectID": "02_graficos/8g_mancuernas.html#para-más-de-dos-variables-posición",
    "href": "02_graficos/8g_mancuernas.html#para-más-de-dos-variables-posición",
    "title": "Gráficos de mancuernas",
    "section": "Para más de dos variables (posición)",
    "text": "Para más de dos variables (posición)\n\nGráficoCódigoCódigo anotadoFormato de los datos\n\n\n\n\n\n\n\n\n\nggplot(edad_ideol, aes(x = Media, y = edad, group = edad)) +\n  geom_vline(xintercept = seq(0, 10, by = 1), color = \"lightgrey\", alpha = 0.5) +\n  facet_wrap(~ Tema, ncol = 1, strip.position = \"top\", labeller = labeller(Tema = nombres_temas))+\n    geom_vline(\n    data = posicion,\n    aes(xintercept = Media, color = Partido),\n    linetype = \"dotted\",\n    lwd = 1) +\n  geom_line(aes(group = edad), color = \"black\", lwd = 0.5) +  \n  geom_point(aes(color = ideologia), size = 3, alpha = 0.7) +\n  geom_vline(xintercept = 5, linetype = \"dashed\", color = \"black\") +\n  labs(\n    x = \"Media\",\n    y = NULL,\n    caption = \"Medias de ubicación de la población según su ideología y edad.\\nEl 0 indica posiciones más favorables.\",\n    color = NULL) +\n  theme_classic() +\n  theme(\n    axis.text.y = element_text(size = 9),  \n    axis.text.x = element_text(size = 10),  \n    legend.position = \"bottom\",\n    strip.background = element_blank(),\n    strip.text  = element_text(angle = 0,\n                               size = 12)) +\n  scale_x_continuous(limits = c(0, 10), breaks = c(0, 2, 4, 6, 8, 10)) +\n  scale_color_manual(values = colores, \n                     breaks = c(\"PSOE\", \"Izquierda\", \"PP\",\"Centro\", \"UP\",\"Derecha\", \"Vox\"))\n\n\nLa explicación de este código es muy similar al de los puntos simples\nggplot(edad_ideol, aes(x = Media, y = edad, group = edad)) +\n  geom_vline(xintercept = seq(0, 10, by = 1), color = \"lightgrey\", alpha = 0.5) +\n\n## Juntar los 5 gráficos (1 por tema) en uno solo.\n  facet_wrap(~ Tema, ncol = 1, strip.position = \"top\", labeller = labeller(Tema = nombres_temas))+\n\n## Líneas verticales con los valores de cada partido\n  geom_vline(\n    data = posicion,\n    aes(xintercept = Media, color = Partido),\n    linetype = \"dotted\",\n    lwd = 1) +\n\n## Puntos y líneas con las posiciones de los 3 grupos ideológicos\n  geom_line(aes(group = edad), color = \"black\", lwd = 0.5) +  \n  geom_point(aes(color = ideologia), size = 3, alpha = 0.7) +\n\n## Linea vertical en el 5\n  geom_vline(xintercept = 5, linetype = \"dashed\", color = \"black\") +\n\n## Otros ajustes estéticos\n  labs( # Etiquetas\n    x = \"Media\",\n    y = NULL,\n    caption = \"Medias de ubicación de la población según su ideología y edad.\\nEl 0 indica posiciones más favorables.\",\n    color = NULL) +\n  theme_classic() + # Tema de fondo\n  theme( # Ajustes de tamaño y posición de las etiquetas\n    axis.text.y = element_text(size = 9),  \n    axis.text.x = element_text(size = 10),  \n    legend.position = \"bottom\",\n    strip.background = element_blank(), # Para elimirar el recuadro de los títulos de cada uno de los 5 temas\n    strip.text  = element_text(angle = 0,     # Títulos en horizontal\n                               size = 12)) +\n  scale_x_continuous(limits = c(0, 10), breaks = c(0, 2, 4, 6, 8, 10)) + # Valores personalizados en el eje x\n  scale_color_manual(values = colores, #Colores personalizados\n                     breaks = c(\"PSOE\", \"Izquierda\", \"PP\",\"Centro\", \"UP\",\"Derecha\", \"Vox\")) # Orden personalizado de la leyenda\n\n\n\n\n\n\n\n\n\n\n\nedad_ideol\n\n\n\n\n\n\n\nposicion",
    "crumbs": [
      "Gráficos",
      "Gráficos de mancuernas"
    ]
  },
  {
    "objectID": "02_intro/11_introduccion.html",
    "href": "02_intro/11_introduccion.html",
    "title": "R Studio",
    "section": "",
    "text": "Ventanas de R Studio\n\n\n\n\nEditor de código: ficheros donde se escribe el código. Elemento clave para la reproducibilidad.\nConsola: muestra los resultados del código ejecutado y permite ejecutar código de forma rápida (poco recomendable excepto para pruebas y mirar cosas muy concretas y rápidas)\nVentana de ambiente: muestra los objetos almacenados\nVentana de ficheros/gráficos…\n\nPermite visualizar resultados del trabajo: gráficos, html…\nEncontrar ficheros\nVer detalles de los paquetes empleados, etc.\n\n\nExisten diversos formatos para escribir código en R, siendo los más destacados los siguientes:\n\nScript: útil si solo se quiere escribir código.\nRMarkdown: más útil si se quieren añadir anotaciones de texto frecuentes. Además, cuenta con numerosas opciones extra, como añadir imágenes, tablas o guardar los documentos en formato pdf o html, entre otras funciones.\nQuarto: muy similar a RMarkdown, pero más moderno y con más opciones.",
    "crumbs": [
      "Introducción a R",
      "R Studio"
    ]
  },
  {
    "objectID": "02_intro/11_introduccion.html#qué-es-r-studio",
    "href": "02_intro/11_introduccion.html#qué-es-r-studio",
    "title": "R Studio",
    "section": "",
    "text": "Ventanas de R Studio\n\n\n\n\nEditor de código: ficheros donde se escribe el código. Elemento clave para la reproducibilidad.\nConsola: muestra los resultados del código ejecutado y permite ejecutar código de forma rápida (poco recomendable excepto para pruebas y mirar cosas muy concretas y rápidas)\nVentana de ambiente: muestra los objetos almacenados\nVentana de ficheros/gráficos…\n\nPermite visualizar resultados del trabajo: gráficos, html…\nEncontrar ficheros\nVer detalles de los paquetes empleados, etc.\n\n\nExisten diversos formatos para escribir código en R, siendo los más destacados los siguientes:\n\nScript: útil si solo se quiere escribir código.\nRMarkdown: más útil si se quieren añadir anotaciones de texto frecuentes. Además, cuenta con numerosas opciones extra, como añadir imágenes, tablas o guardar los documentos en formato pdf o html, entre otras funciones.\nQuarto: muy similar a RMarkdown, pero más moderno y con más opciones.",
    "crumbs": [
      "Introducción a R",
      "R Studio"
    ]
  },
  {
    "objectID": "02_intro/11_introduccion.html#instalar-paquetes",
    "href": "02_intro/11_introduccion.html#instalar-paquetes",
    "title": "R Studio",
    "section": "Instalar paquetes",
    "text": "Instalar paquetes\nLos paquetes son un conjunto de código, datos y documentación que permiten implementar funciones predefinidas extra.\nR básico:\nPara instalar un paquete, se puede hacer buscándola en la pestañaInstall dentro de la pestaña Packages (esquina inferior derecha de la pantalla).\nTambién se puede instalar usando el siguiente comando: install.packages(\"nombre_librería\")\nUna vez instalada, se abre usando el comando: library(\"nombre_librería\")\nIMPORTANTE: las librerías deben abrirse siempre que se usen (no con cada comando que se use, sino con cada sesión de R que se abra), pero solo se instalan una vez.\nLibrería pacman:\n\nInstalar la librería pacman.\nAbrir la librería.\nCuando se vaya a abrir una nueva librería, en lugar de usar el comando library(nombre_librería) se usa p_load(nombre_librería)\n\nLa ventaja de este comando es que, en caso de que no esté instalada la librería, se descargará y abrirá directamente.\nAdemás, con el comando p_load se pueden abrir en un único comando varias librerías, lo que reduce la cantidad de espacio necesario para abrir las librerías: p_load(librería_1, librería_2, librería_3...)\n\n\nPaquetes de GitHub:\nTanto install.packages como p_load sirven únicamente para paquetes que estén dentro de CRAN. Para instalar los que estén en GitHub se debe usar el comando devtools::install_github(\"libraría\"), que pertenece a la librería devtools.",
    "crumbs": [
      "Introducción a R",
      "R Studio"
    ]
  },
  {
    "objectID": "02_intro/11_introduccion.html#recomendaciones",
    "href": "02_intro/11_introduccion.html#recomendaciones",
    "title": "R Studio",
    "section": "Recomendaciones",
    "text": "Recomendaciones\nAl comenzar un nuevo trabajo en R, conviene crear un proyecto nuevo en el que se quiera trabajara, y mantener este ordenado. También es recomendable guardar todos los códigos de forma estructurada, de modo que tanto otras personas como tu yo del futuro puedan saber para qué sirven cada una de las cosas que se han añadido.",
    "crumbs": [
      "Introducción a R",
      "R Studio"
    ]
  },
  {
    "objectID": "02_intro/11_introduccion.html#atajos",
    "href": "02_intro/11_introduccion.html#atajos",
    "title": "R Studio",
    "section": "Atajos",
    "text": "Atajos\n\nAñadir un pipe (%&gt;%): ctrl + shift + m\nAñadir una almohadilla a la línea de código sobre la que se esté: ctrl + shift + c\nAñadir la &lt;- con sus espacios: alt + -\n\nEn RMarkdown / Quarto\n\nAñadir un nuevo chunk de R: ctrl + alt + i\n\nEn un script\n\nCrear nuevas secciones dentro del documento: ctrl + shift + r",
    "crumbs": [
      "Introducción a R",
      "R Studio"
    ]
  },
  {
    "objectID": "02_intro/13_flujos_trabajo.html",
    "href": "02_intro/13_flujos_trabajo.html",
    "title": "Flujos de trabajo",
    "section": "",
    "text": "El directorio de trabajo es el lugar donde R busca los archivos que le pides que cargue, y donde guardará los archivos que generes.\nPara trabajar dentro de una carpeta del ordenador exiten dos opciones: - Crear un nuevo proyecto y trabajar desde ahí. - Establecer manualmente el directorio:\nsetwd(\"dirección de la carpeta en el ordenador\")\nPara consultar los ficheros que hay dentro de nuestro directorio de trabajo podemos usar la función dir()\ndis()\n\nSource\nExtraer el código a un script de R:\nknitr::purl(\"nombre_archivo.Rmd\")\nEjecutar todo el código de un script sin mostrarlo:\nsource(\"nombre_archivo.R\")\nSe escribe al principio del RMarkdown (o del script) para que ejecute directamente un script sin mostrar todo el código (en el environment) (importa el código sin mostrarlo todo).\nPor ejemplo, puedes tener un script solo con la limpieza de la base de datos, y para que no sea tan largo y lioso el documento, ejecutarlo directamente y en el nuevo RM comenzar directamente con el análisis.\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Introducción a R",
      "Flujos de trabajo"
    ]
  },
  {
    "objectID": "99_otras_cosas.html",
    "href": "99_otras_cosas.html",
    "title": "Otras cosas",
    "section": "",
    "text": "secuencia&lt;-5:15\nsecuencia\n\n [1]  5  6  7  8  9 10 11 12 13 14 15\n\nseq(5.5, 10, by = 0.5) #la secuencia irá de 5,5 hasta 10, de 0,5 en 0,5\n\n [1]  5.5  6.0  6.5  7.0  7.5  8.0  8.5  9.0  9.5 10.0\n\nseq(5, 10, length.out = 5) #entre el 5 y el 10, sacará una secuencia formada por 5 números\n\n[1]  5.00  6.25  7.50  8.75 10.00\n\n\nTambién se pueden repetir valores:\n\nvalores &lt;- c(\"yes\", \"no\")\n\nrep(valores, times=3) #Repite la secuencia completa tres veces\n\n[1] \"yes\" \"no\"  \"yes\" \"no\"  \"yes\" \"no\" \n\nrep(valores, each=3) #Repite cada uno de los valores del vector 3 veces\n\n[1] \"yes\" \"yes\" \"yes\" \"no\"  \"no\"  \"no\""
  },
  {
    "objectID": "99_otras_cosas.html#secuencia",
    "href": "99_otras_cosas.html#secuencia",
    "title": "Otras cosas",
    "section": "",
    "text": "secuencia&lt;-5:15\nsecuencia\n\n [1]  5  6  7  8  9 10 11 12 13 14 15\n\nseq(5.5, 10, by = 0.5) #la secuencia irá de 5,5 hasta 10, de 0,5 en 0,5\n\n [1]  5.5  6.0  6.5  7.0  7.5  8.0  8.5  9.0  9.5 10.0\n\nseq(5, 10, length.out = 5) #entre el 5 y el 10, sacará una secuencia formada por 5 números\n\n[1]  5.00  6.25  7.50  8.75 10.00\n\n\nTambién se pueden repetir valores:\n\nvalores &lt;- c(\"yes\", \"no\")\n\nrep(valores, times=3) #Repite la secuencia completa tres veces\n\n[1] \"yes\" \"no\"  \"yes\" \"no\"  \"yes\" \"no\" \n\nrep(valores, each=3) #Repite cada uno de los valores del vector 3 veces\n\n[1] \"yes\" \"yes\" \"yes\" \"no\"  \"no\"  \"no\""
  },
  {
    "objectID": "99_otras_cosas.html#NA",
    "href": "99_otras_cosas.html#NA",
    "title": "Otras cosas",
    "section": "Valores perdidos",
    "text": "Valores perdidos\n\nComprobar si hay valores perdidos: is.na() o anyNA(). En la consola dirá True o False.\nConocer el número de valores perdidos dentro de una variable: table(datos$var, useNA=\"always\").\nEliminar todas las observaciones de una base de datos que tengan casos perdidos en alguna de sus variables: datos &lt;- na.omit(datos)"
  },
  {
    "objectID": "99_otras_cosas.html#funciones",
    "href": "99_otras_cosas.html#funciones",
    "title": "Otras cosas",
    "section": "Crear funciones",
    "text": "Crear funciones\nPermiten concentrar varios comandos en uno solo.\nnombre_función &lt;- function (x){\n  argumentos de la función\n}\n\n\nEjemplos:\n\nFunción que devuelve el valor de la mitad de un número:\n\nfuncionmitad &lt;- function(x){\n  y &lt;- x/2\n  return(y)\n}\n\nFunción que hace una potencia y añade texto:\n\nfuncionpotencia &lt;- function(x,y){\n  potencia &lt;- x^y\n  z &lt;- \"El resultado de la potencia es: \"\n  texto &lt;- paste0(z,potencia)\n  return(texto)\n}\n\nFunción para crear tablas de frecuencia (como %) automáticas (función table de stata):\n\ntabla &lt;- function(x,y){\n  tabla_decimal &lt;- table(x,y) %&gt;% prop.table %&gt;% round(4)\n  tabla_porcentaje &lt;- tabla_decimal*100\n  return(tabla_porcentaje)\n}\nSi algunas de las funciones creadas se quiere reutilizar habitualmente, existen dos formas fáciles de volver a instalarlas:\n\nEscribiendo estas funciones en un script a parte y usando source.\nCrear un paquete propio."
  },
  {
    "objectID": "99_otras_cosas.html#recomendaciones_dicotomicas",
    "href": "99_otras_cosas.html#recomendaciones_dicotomicas",
    "title": "Otras cosas",
    "section": "Recomendaciones para las variables dicotómicas",
    "text": "Recomendaciones para las variables dicotómicas\nEs recomendable nombrar a la variable como la categoría de referencia. Por ejemplo, en el siguente ejemplo la variable se llama hombre en lugar de sexo porque el 1 se corresponde con los hombres. Es mejor hacerlo de este modo porque facilita la interpretación de los análisis. Por ejemplo, al hacer un summary de la nueva variable, se puede ver fácilmente que el 0.51 indica que la proporción de hombres en la muestra es del 51%.\ndatos &lt;- datos %&gt;% \n  mutate(hombre=ifelse(SEXO==1, 1, 0))"
  },
  {
    "objectID": "99_otras_cosas.html#so-irene",
    "href": "99_otras_cosas.html#so-irene",
    "title": "Otras cosas",
    "section": "S/O: IRENE",
    "text": "S/O: IRENE"
  }
]