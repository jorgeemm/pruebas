---
title: "Documentos de R"
---

```{=html}
<style>
body {
text-align: justify}
</style>
```

```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
                      fig.align = 'center', # Para que los gráficos de los comandos estén centrados en la página
                      out.width = '60%') # Para modificar el tamaño de los gráficos (en este caso hacerlos algo más pequeños)
```

```{r include=FALSE}
setwd("C:/Users/Lenovo/OneDrive/Escritorio/Apuntes_R")
library(tidyverse)
library(pacman)
source("00_datos/source.R")
```

Para escribir código en R se pueden usar tres tipos de documentos: Script, RMarkdown y Quarto.

## Script

Sirve solo para escribir código. No tiene otras opciones como poner imágenes, texto, títulos o guardar en otros formatos como pdf o html.

## RMarkdown

### 1. Elementos básicos

**Yalm**

Se escribe al comienzo del documento, y establece las características básicas de este y como se va a guardar.

```{=html}
<pre><code>---
 title: "El título del documento"
 subtitle: "El subtítulo"
 date: "Fecha"
 author: "Autor"
 output:
  html_document: #también se puede guardar como pdf o word, así saca una página web
    theme: united #es el tema del documento, hay diferentes
    toc: true #para crear una tabla de contenido
 ---</code></pre>
```

Muchos de estos elementos son opcionales, y se pueden añadir más.

Ejemplos de temas que se pueden utilizar para el documento: <https://rpubs.com/ranydc/rmarkdown_themes>

**Chunks**

Para escribir los códigos de R y que estos se puedan ejecutar, se debe añadir un chunk. Se puede hacer manualmente o mediante el atajo Ctrl + Alt + I.

Para ejecutar el códico que se escriba, se puede pulsar el triángulo verde de la esquina superior derecha (del chunk), la opción Run de la esquina de la pestaña del rmd, o usando Ctrl+Enter.

Dentro de los chunks, se pueden establecer diferentes opciones para que no se muestre el código en el documento final pero se ejecute igualmente, no se muestren los errores... Estos ajustes se puedes escribir como comandos dentro de {r} o en la rueda de opciones que aparece a la derecha de cada chunk. Algunas de estas opciones son:

-   include: incluir los contenidos del chunk en el output
-   message: mensajes de la consola
-   warning: avisos de la consola
-   echo: muestra el código
-   eval: muestra el resultado del código (tabla, gráfico, etc.)
-   …

Si se quiere que alguna de estas opciones se aplique a todos los chunks del documento, en lugar de tener que especificarlas en cada nuevo bloque de código se pueden escribir una única vez al princicipio del documento del siguiente modo:

``` r
knitr::opts_chunk$set(warning = FALSE, # En caso de mensajes de alerta
                      message = FALSE, # Otro tipo de mensajes
                      echo = TRUE, # Mostrar el código
                      results = TRUE) # Mostrar los resultados del código
```

Asimismo, los diferentes chunks del documento se les pueden dar nombres del siguiente modo: {r nombre chunk}

Los chunks de R además permiten ejecutar todo el contenido de los chunks empleados con anterioridad, lo que puede resultar muy útil en el casdo de cometer errores que nedesitar resetear todo el trabajo realizado hasta el momento. Para ello, se debe seleccrionar la segunda opción que aparece en la esquina superior derecha del chunk (entre la rueda y el triángulo verde).

**Encabezados**

Sirven para delimitar los diferentes apartados y subapartados de los documentos. Se crean con las \# (en una nueva línea se escribiría: \# Encabezado de nivel 1. El espacio entre la almohadilla y el texto es imprescindible. Si en lugar de escribir una única \# se ponen 2, 3... o 6, se van creando subniveles de encabezados (un mayor número de almohadillas indica un nivel inferior de encabezado).

**Espacio entre líneas**

Si se quiere añadir un salto de línea, se debe dejar una línea de código vacía entre los dos textos que se pretenden separar. Si simplemente se escribe en la siguiente línea, se compliará todo como parte del mismo párrafo.

**Compilar el documento**

Se selecciona la opción Knit, lo que genrará un documento HTML/PDF con todo el contenido y los resultados.

------------------------------------------------------------------------

### 2. Opciones de texto y otros elementos

*Si no se conocen estas opciones, es mejor usar el apartado de edición de texto Visual y no Source, ya que en el primero se puede editar el texto de forma parecida a un Word.*

**Formatos de texto:**

-   \*\*Texto en negrita\*\* = **Texto en negrita** (los asteriscos se pueden sustituir por \_)
-   \*Texto en cursiva\* = *Texto en cursiva*
-   \*\*\*Texto en negrita y cursiva\*\*\* = ***Texto en negrita y cursiva***
-   \`Código subrayado\` = `Código subrayado`
-   Subíndice: 3\~2\~ = 3~2~
-   Superíndice: 3\^2\^ = 3^2^

**Listas:**

Para las listas de puntos, se escriben al comienzo de la línea de código y seguido de un espacio antes del texto un asterisco (\*) o un guión (-). Además, si en la siguiente línea se añade espacio también antes del símbolo, se creará una sublista:

-   Elemento 1
    -   Elemento 2

También se pueden hacer listas con números y letras: 1. 1) A. i. etc.

**Citas**

Se escribe el texto con un \> al principio de la línea:

> Ejemplo de una cita

**Ecuaciones**

Se escribe el texto de la ecuación entre dos símbolos del dolar. Ej.: \$E=mc\^{2}\$ = $E=mc^{2}$

Si se quiere que la ecuación esté en un bloque a parte en lugar de dentro del texto, se añaden dos símbolos del dolar para abrir y cerrar la ecuación: $$E=mc^{2}$$

**Hipervínculos**

El texto para el que se quiere el hipervínculo se escribe entre corchetes, y a continuación (sin dejar espacios) se escribe entre paréntesis el enlace a la página para la que se quiere el hipervínculo. Ej.: \[Texto del hipervínculo\](paginaweb.com)

**Añadir imágenes**

Hay varias opciones para insertar una imagen en el texto. Por ejemplo, puedes guardarla previamente en el directorio de trabajo (o en el proyecto que hayas creado). Una vez la tienes en tu directorio, puedes usar esta línea de código para introducirla en el documento final: `![título de la imagen](path-to-image-here)`. Además, se puede combinar con *center* para centrar la imagen en el output, y con *width* para ajustar el tamaño.

``` r
<center>
![Título de la imagen](mi_imagen.png){width=350px}
</center>
```

Otra manera sencilla de controlar el tamaño es usando porcentajes: `{width=10%}`

Una alternativa bastante usada, por ejemplo, es usar *include_graphics* para controlar el ancho y alto de la imagen añadiendo como opción dentro de {r} lo siguiente: `out.width = "100px", out.height="300px"`

``` r
knitr::include_graphics("mi_imagen.png")
```

También tenemos la opción de introducir una imagen directamente desde la web (es decir, sin descargarla previamente). Primero, creamos una variable con la dirección url. Una vez creada la variable, se añade igual que una imágen guardada en el directorio:

``` r
nombre_imagen<-"https://ejemplo_imagen.jpg" 
```

**Líneas horizontales**

Se añaden escribiendo en una línea vacía \*\*\* o ---. El resultado es:

------------------------------------------------------------------------

Existen muchas otras opciones dentro del RMarkdown, como incluir tablas, citas, referencias... En el [enlace](https://rstudio.github.io/cheatsheets/html/rmarkdown.html) se puede encontrar información extra, aunque es solo un ejemplo de página sobre RMarkdown.

------------------------------------------------------------------------

### 3. Índices y tablas de contenido {.tabset .tabset-fade .tabset-pills}

#### 2.1. Índice como lista al comienzo del documento

Los índices se crean a partir de los títulos (#). Se puede especificar el número de niveles que se quieren incluir gracias a la opcion`toc_depth`:

```{=html}
<pre><code> ---
title: "El título del documento"
output:
  html_document:
    toc: true
    toc_depth: 3 #En este caso se incluirían los tres primeros niveles del títulos (hasta ###)
--- </code></pre>
```

------------------------------------------------------------------------

#### 2.2. Índice a la izquierda del documento

**Tabla de contenido despegable**

Para poder hacer una tabla de contenido despegable, se debe crear un css personalizado:

**Índice personalizable en RMarkdown**

Para crear un índice (TOC - Table of Contents) personalizable en RMarkdown que sea flotante y se pueda ocultar/mostrar, necesitamos añadir código CSS y JavaScript. Aquí te explico paso a paso cómo hacerlo.

**1. Código CSS necesario**

Primero, necesitas añadir este bloque de código CSS al inicio de tu documento. Este código dará estilo al índice y creará la funcionalidad de mostrar/ocultar:

````{=html}
<pre><code>```{css, echo=FALSE}
hr {
  border: none;
  border-top: 3px solid #bbb;
  margin: 1em 0;
}
 #TOC {
  position: fixed;
  left: 0;
  top: 0;
  width: 300px;
  height: 100%;
  overflow-y: auto;
  background: #f8f8f8;
  border-right: 1px solid #e7e7e7;
  padding: 20px;
  transition: left 0.3s ease;
}
 #TOC.hidden {
  left: -300px;
}
 #toggle-toc {
  position: fixed;
  top: 5px;
  left: 5px;
  z-index: 1000;
  background: #f8f8f8;
  border: 1px solid #e7e7e7;
  padding: 5px 10px;
  cursor: pointer;
}
.main-content {
  transition: margin-left 0.3s ease;
  margin-left: 200px;
}
.main-content.toc-hidden {
  margin-left: 150px;
}
@media (max-width: 767px) {
  .main-content {
    margin-left: 0;
  }
}
```</code></pre>
````

**2. Código JavaScript necesario**

Luego, necesitas añadir este bloque de código JavaScript que proporcionará la funcionalidad interactiva:

````{=html}
<pre><code>```{js, echo=FALSE}
$(document).ready(function() {
  var toc = $('#TOC');
  var toggle = $('<button id="toggle-toc">☰</button>');
  var mainContent = $('body > .main-container');
  $('body').prepend(toggle);
  mainContent.addClass('main-content');
  toggle.click(function() {
    toc.toggleClass('hidden');
    mainContent.toggleClass('toc-hidden');
  });
  // Inicializar el estado en pantallas pequeñas
  if ($(window).width() <= 767) {
    toc.addClass('hidden');
    mainContent.addClass('toc-hidden');
  }
});
```</code></pre>
````

**3. Configuración del YAML**

Además, asegúrate de que tu encabezado YAML incluya la opción de tabla de contenidos:

```{=html}
<pre><code>---
title: "Tu título"
output: 
  html_document:
    toc: true
    toc_float: true
 ---</code></pre>
```

**4. Cómo funciona**

Este código creará:

-   Un índice flotante en el lado izquierdo de la página

-   Un botón (☰) en la esquina superior izquierda para mostrar/ocultar el índice

-   El índice se ocultará automáticamente en dispositivos móviles

-   Transiciones suaves al mostrar/ocultar el índice

**Nota:** El código CSS y JavaScript debe colocarse al principio del documento, después del encabezado YAML.

**Personalización**

Puedes personalizar el aspecto modificando los valores en el código CSS:

-   Cambia `width: 300px` en `#TOC` para ajustar el ancho del índice

-   Modifica `background: #f8f8f8` para cambiar el color de fondo

-   Ajusta `margin-left` en `.main-content` para cambiar el espaciado del contenido principal

------------------------------------------------------------------------

#### 2.3. Índice por pestañas

1.  En el yalm no se escribe el toc: true
2.  Tras el primer título (que se puede dejar en blanco escribiendo únicamente la #) se escribe el siguiente comando `{.tabset .tabset-fade .tabset-pills}`.
3.  Esta opción se puede repetir para los sucesivos subniveles de títulos, creando nuevas pestañas dentro de cada pestaña (como en este archivo).

------------------------------------------------------------------------

#### 2.4. Números de sección

En lugar de añadir a mano los números delante de cada título (1.2. Subtitulo), estos se pueden añadir automáticamente gracias a la siguiente opción:

```{=html}
<pre><code>---
title: "El título del documento"
output:
  html_document:
    toc: true
    number_sections: true
---</code></pre>
```

Si se utiliza esta opción, hay que comenzar los títulos por el primer nivel, porque si no en el segundo apareceran como 0.1 0.2 ...

------------------------------------------------------------------------

### 4. Otras cosas RMarkdown

-   Para escribir código de R sin que se ejecute (pero mostrándolo en el html), se borran las llaves que rodean la r del chunk:
    -   Código que se ejecuta:

````{=html}
<pre><code>```{r}
Aquí iría el código
```</code></pre>
````

-   Código que no se ejecuta:

````{=html}
<pre><code>```r
Aquí iría el código
```</code></pre>
````

-   **Crear índices a mano** (lista con hipervínculos)
    1)  Junto a un título (para cualquier nivel de #), se escribe: {#nombre-sección}
    2)  Donde se quiera crear el índice se pone el siguiente texto: \[Nombre de la sección\] (#nombre-sección) *Importante: no se debe dejar ningún espacio entre el corchete y el paréntesis*.

------------------------------------------------------------------------

## Quarto

Las mismas opciones que en RMarkdown (menos lo del tabstat, que se hace de un modo distinto).
