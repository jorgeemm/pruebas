---
title: "Operaciones básicas"
---

```{=html}
<style>
body {
text-align: justify}
</style>
```

```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
                      fig.align = 'center', # Para que los gráficos de los comandos estén centrados en la página
                      out.width = '60%') # Para modificar el tamaño de los gráficos (en este caso hacerlos algo más pequeños)
```

```{r include=FALSE}
setwd("C:/Users/Lenovo/OneDrive/Escritorio/Apuntes_R")
library(tidyverse)
library(pacman)
source("00_datos/source.R")
```

## 1. Operaciones numéricas

-   Suma, resta, multiplicación, división, exponencial...
-   Cuadrado (sqrt) y logaritmos (log)
-   Absoluto:

```{r}
abs(-1.4)
```

-   Redondear:

```{r}
round(1.234, 2) #El segundo número indica el número de decimales al que se redondeará.
```

------------------------------------------------------------------------

## 2. Edición de caracteres (texto)

-   Unión de caracteres:

```{r}
paste("Hola", "mundo", sep = " ")
paste0("Hola", "mundo")
```

-   Seleccionar una parte del texto:

```{r}
substring("Nombre: Marga", first = 7, last = 11)
```

-   Pasar un texto a minúsculas:

```{r}
tolower("Hola, soy Marga")
```

-   Pasar un texto mayúsculas:

```{r}
toupper("Hola, soy Marga")
```

-   Contar el número de caracteres (también espacios y símbolos, no solo letras):

```{r}
nchar("Hola, mundo!")
```

------------------------------------------------------------------------

## 3. Operadores lógicos y relacionales

**Operadores lógicos:**

-   `!` NOT (lo opuesto)
-   `&` AND
-   `|` OR

**Operadores relacionales:**

-   `==` igual
-   `!=` distinto
-   `>` mayor que
-   `>=` mayor o igual que
-   `<=`menor o igual que
-   `<` menor que

## 4. Operaciones con vectores

Un vector es una secuencia de elementos del mismo tipo (numérico, carácter, lógico, etc.). Se puede asimilar a una variable.

-   Ver de qué tipo es el vector: `class()`
-   Comprobar la longitud del vector: `length()`
-   Si los vectores son númericos, se les pueden aplicar las mismas operaciones que a los números (suma, multuplicaicón...), ya sea a un único vector o entre vectores (sumar un vector a otro). Ej.:

```{r}
vector1 <- c(1, 6, 4)
vector2 <- c(1, 2, 3)

vector1 + 10
vector1 + vector2
```

-   Comparar dos vectores:

```{r}
vector1 == vector2
```

-   Concatenar vectores: mismos comandos que para unir dos caracteres de texto. Ej.:

```{r}
paste(vector1, ":00", sep="")
paste(vector1, vector2, sep = " & ")
```

-   Buscar si existe un valor concreto dentro de un vector. Ej.:

```{r}
partidos1 <- c("PP", "PSOE", "SUMAR", "VOX")
partidos2 <- c("PP", "PSOE", "OTROS")
"VOX" %in% partidos1
"VOX" %in% partidos2
```

-   Combinar vectores:

```{r}
long_vector <- c(partidos1, partidos2)
long_vector
```

-   Conocer un elemento dentro de una posición concreta de un vector:

```{r}
num_vector <- 5:10
num_vector[3] # Elemento en la posición 3
num_vector[c(2, 4)] # Elementos en las posiciones 2 y 4
```

-   Cambiar elementos específicos de un vector:

```{r}
num_vector[c(2, 4)] <- c(13, 50)
num_vector
```

-   Explorar los primeros y últimos valores de un vector:

```{r}
head(long_vector, 2) # devuelve los dos primeros
tail(long_vector, 3) # devuelve los tres primeros
```

------------------------------------------------------------------------
